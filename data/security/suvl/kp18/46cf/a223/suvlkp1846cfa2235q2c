{"data":{"attachmentkeynames":["rs"],"cmd":"init","ctl":"security","desc":"\"Get the authenticated user's data\"\n\nHere's a brief description of what this function does:\n\nThis function retrieves and returns the data for the currently authenticated user if they are logged in, or `None` if the user is not authenticated. The function checks the session data to determine whether a user is authenticated or not. If the user is authenticated, it retrieves their data from the security system's user data store and returns it as a `DataObject`.\n\nIn FlowLang, you might write this function as:\n```rust\nfunction get_authenticated_user() -> Option<DataObject> {\n    // Code to check for authentication, retrieve user data, and return it.\n}\n```","import":"use std::thread;\nuse std::fs;\nuse core::time::Duration;\nuse flowlang::datastore::DataStore;\nuse flowlang::flowlang::system::time::time;\nuse flowlang::appserver::fire_event;\nuse ndata::dataarray::DataArray;\nuse ndata::data::Data;\nuse flowlang::flowlang::object::index_of::index_of;\nuse flowlang::command::Command;\nuse flowlang::flowlang::file::write_properties::write_properties;\nuse std::fs::create_dir_all;\nuse flowlang::flowlang::system::unique_session_id::unique_session_id;\nuse flowlang::flowlang::file::read_properties::read_properties;\n","lib":"security","params":[],"returntype":"JSONObject","type":"rust"},"id":"suvlkp1846cfa2235q2c","readers":[],"time":1746215484661,"username":"system","writers":[]}