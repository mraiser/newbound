{"data":{"data":[],"name":"node","groups":"anonymous","ctl":"plyktp178da9d0906s1b","three":{"controls":[{"color":"#00ff00","shape":"sphere","pos":{"x":0,"y":0,"z":0},"rot":{"x":0,"y":0,"z":0},"name":"orb","scale":{"x":"0.02","y":"0.02","z":"0.02"},"id":"hmzspn1682ebb4187udc6e","opacity":0.5,"uuid":"6aab996a-a3f0-414f-80da-d84186c9a0e8","db":"threejs"}],"assets":[],"behaviors":[{"name":"animate","id":"65021225-86d4-4253-b70e-f05973bcc482","params":[{"name":"model","type":"object"}],"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.model = model;\nme.type = \"node\";\nme.sphere = me.children[0];\nme.data = ME.DATA;\nme.checkIcon();\n"},{"name":"render","id":"c87da9fc-422c-48a8-aa41-5f2cb7c07a10","params":[{"name":"model","type":"object"}],"body":"var me = this;\nvar scale = Number(me.sphere.rig.scale_x);\nvar target = me.selected ? 0.2 : 0.15;\nif (scale != target) {\n  var amt = scale < target ? 0.01 : -0.01;\n  scale += amt;\n  me.sphere.rig.scale_x = me.sphere.rig.scale_y = me.sphere.rig.scale_z = scale;\n}\nvar pos = Number(me.sphere.rig.pos_y);\ntarget = me.direction == 'src' ? -0.1 : 0.1;\nif (Math.abs(target - pos)>0.001){\n  var amt = (target - pos) / 10;\n  me.sphere.rig.pos_y = pos + amt;\n  if (me.icon) me.icon.model.rig.pos_y = 3 * (pos + amt);\n}\nif (me.line){\n  if (me.target_rot != me.current_rot){\n    me.current_rot = me.target_rot;\n    me.line.rotation.y = me.current_rot;\n    me.line.position.x = Math.sin(me.current_rot) * -20;\n    me.line.position.z = Math.cos(me.current_rot) * -20 + 20;\n  }\n  var pos = me.line.geometry.attributes.position.array[2];// me.line.geometry.vertices[0].z;\n  var target = me.target_z ? me.target_z : 0;\n  if (pos != target) {\n    var amt = pos < target ? 0.5 : -0.5;\n    pos += amt;\n    me.line.geometry.attributes.position.array[2] = pos;\n    me.line.geometry.attributes.position.array[5] = pos;\n    me.line.geometry.attributes.position.needsUpdate = true;\n  }\n}\nif (me.data.mode == 'loop'){\n  if (typeof me.data.loop == \"string\" && me.parent.parent.inputbar && me.parent.parent.outputbar){\n    var putbar = me.direction == 'src' ? me.parent.parent.inputbar.api : me.parent.parent.outputbar.api;\n    var n = putbar.getNodeByName(me.data.loop)\n    if (n) me.data.loop = n;\n  }\n}\n"},{"name":"checkIcon","id":"ba04b1f1-0e2f-48bc-8ab5-878bd4e3a890","params":[],"body":"var me = this;\nif (me.parent && me.parent.parent.type == \"operation\"){\n  if (!me.data.mode) me.data.mode = \"regular\";\n  if (!me.iconmode) me.iconmode = \"regular\";\n  if (me.iconmode != me.data.mode){\n    me.clearIcon();\n    me.iconmode = me.data.mode;\n    if (me.iconmode != 'regular'){\n      me.addIcon(me.iconmode);\n    }\n  }\n}\n"},{"name":"clearIcon","id":"969ad0cb-885b-49a4-9bea-927d0af223de","params":[],"body":"var me = this;\nif (me.icon) me.model.scene.viewer.removeModel(me.icon);"},{"name":"addIcon","id":"8a9e7517-f451-4e1a-af19-a9491acfbdd0","params":[{"name":"mode","type":"object"}],"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nvar el = $('<div/>');\n$(ME).append(el);\nvar ctl = {};\nvar s = mode == 'list' ? 0.05 : 0.1;\nctl.scale = new THREE.Vector3(s, s, s);\nme.model.scene.viewer.add(el[0], \"flow\", mode+\"icon\", function(model){\n  //me.children.push(model);\n  me.icon = model.api;\n  model.api.parent = me;\n  me.sphere.rig.scale_x = 0.01;\n  me.sphere.rig.pos_y = 0;\n  if (mode == 'loop' && me.direction == 'src') me.icon.model.rig.rot_z = Math.PI; \n  me.icon.click = me.click;\n  me.icon.drag = me.drag;\n  me.icon.drop = me.drop;\n}, ctl, me.model.group);\n"},{"name":"dirty","id":"b9f8400e-2ce8-4709-8759-322ac8d0ac91","params":[],"body":"var me = this;\nme.parent.dirty();\nme.checkIcon();\n"},{"name":"delete","id":"ea679447-e659-4d27-ac09-110d5d37afaa","params":[],"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nif (me.line) {\n  me.model.scene.remove(me.line);\n  me.line = null;\n}\nif (me.target){ \n  if (me.target.targets) {\n    var i = me.target.targets.indexOf(me);\n    if (i != -1) me.target.targets.splice(i,1);\n  }\n  me.target = null;\n}\nif (me.targets){\n  for (var i in me.targets){\n    var t = me.targets[i];\n    if (t.line) {\n      t.model.scene.remove(t.line);\n      t.line = null;\n    }\n    t.target = null;\n  }\n}\n\nvar i = me.parent.nodes.indexOf(me);\nif (i != -1) me.parent.nodes.splice(i, 1);\n\nme.model.scene.viewer.removeModel(me.sphere);\nme.model.scene.viewer.removeModel(me);\nme.parent.updateWidth();\n$(ME).remove();\n"},{"name":"select","id":"1fd8b319-8d89-4941-8660-4657cce17c1b","params":[],"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.sphere.api.data.color = 0x0000ff;\nme.sphere.api.rebuild();\n\nif (!me.editor) {\n  me.editor = $(\"<div class='floweditor' />\");\n  $(ME).append(me.editor);\n  installControl(me.editor[0], \"flow\", \"node_editor\", function(api){\n    api.parent = me;\n    if (me.parent.parent.type == \"case\") me.editor.find('.node_mode_div').css('display', 'none');\n  }, ME.DATA);\n}\n\nme.editor.css(\"display\", \"block\");\nme.selected = true;\n"},{"name":"unselect","id":"356099c5-7f20-4ddd-b678-079381f29e94","params":[],"body":"var me = this;\nme.sphere.api.data.color = 0x00ff00;\nme.sphere.api.rebuild();\nme.editor.css(\"display\", \"none\");\nme.selected = false;\n"},{"name":"click","id":"170013b8-8a12-4223-8b9d-a15602be90e3","params":[{"name":"event","type":"object"}],"body":"var me = this;\nvar p = me.parent;\nwhile (p.type != 'case') p = p.parent;\np.select(me);\nevent.handled = true;\nreturn false;\n"},{"name":"drop","id":"80bbf430-5dd5-4f47-841a-48397f823055","params":[{"name":"event","type":"object"},{"name":"model","type":"object"}],"body":"var me = this;\n\nif (!event.handled){\n  event.handled = true;\n\n  if (event.shiftKey){\n    $(\"#\"+me.model.scene.viewer.UUID)[0].lastDrag = new Date().getTime();\n    var amsrc = me.direction == \"src\";\n\n    if (model && me.line && model.parent.type == \"node\" && me.direction != model.parent.direction) {\n\n      var v1 = model.models[0].localToWorld(new THREE.Vector3(0,0,0));\n      var off = amsrc ? 3 : 0; \n      var p = me.line.geometry.attributes.position.array;\n      p[off+0] = v1.x;\n      p[off+1] = v1.y;\n      p[off+2] = v1.z;\n      me.line.geometry.attributes.position.needsUpdate = true;\n\n      var src = amsrc ? me : model.parent;\n      var dst = amsrc ? model.parent : me;\n\n      if (amsrc && dst.line){\n        me.model.scene.remove(dst.line);\n      }\n\n      if (amsrc && dst.target){\n        dst.target.targets.splice(dst.target.targets.indexOf(dst), 1);\n      }\n\n      dst.line = me.line;\n      dst.target = src;\n      src.line = null;\n      src.target = null;\n\n      if (!src.targets) src.targets = [];\n      if (src.targets.indexOf(dst) == -1) src.targets.push(dst);\n    }\n    else {\n      if (me.line) {\n        me.model.scene.remove(me.line);\n        me.line = null;\n      }\n      if (me.target){ \n        if (me.target.line) me.model.scene.remove(me.target.line);\n        me.target.target = null;\n        me.target.line = null;\n        me.target = null;\n      }\n    }\n  }\n}\nreturn false;\n"},{"name":"drag","id":"9ded0bf7-60e3-4e59-b3a6-ce72c0e07194","params":[{"name":"event","type":"object"}],"body":"var me = this;\nvar pos = me.model.scene.viewer.to3D(event.clientX, event.clientY);\nvar amsrc = me.direction == \"src\";\n\nif (event.shiftKey && !event.handled){\n  event.handled = true;\n  $(\"#\"+me.model.scene.viewer.UUID)[0].lastDrag = new Date().getTime();\n\n  if (!me.line){\n    var v1 = event.three.intersect.object.localToWorld(new THREE.Vector3(0,0,0));\n    var v2 = event.three.intersect.point.clone();\n    var srcV = amsrc ? v1 : v2;\n    var dstV = amsrc ? v2 : v1;\n\n    var points = [];\n    points.push(\n      srcV,\n      dstV\n    );\n    var geometry = new THREE.BufferGeometry().setFromPoints( points );\n    var material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n    var mesh = me.line = new THREE.Line( geometry, material );\n    me.model.scene.add(mesh);\n  }\n\n  var v1 = event.three.drag;\n  var off = amsrc ? 3 : 0; \n  var p = me.line.geometry.attributes.position.array;\n  p[off+0] = v1.x;\n  p[off+1] = v1.y;\n  p[off+2] = v1.z;\n  me.line.geometry.attributes.position.needsUpdate = true;\n\n  return false;\n}\nelse{\n  var m = me.model;\n  while (m && m.parent && m.parent.model.rig){\n    pos.x -= m.parent.model.rig.pos_x;\n    m = m.parent.model;\n  }\n  me.model.rig.pos_x = pos.x; \n  me.updateLines();\n  me.parent.updateWidth();\n  me.dirty();\n\n  if (me.data.mode == 'loop' && me.data.loop) {\n    me.data.loop.model.rig.pos_x = pos.x;\n    me.data.loop.updateLines();\n    me.data.loop.parent.updateWidth();\n  }\n}  \n"},{"name":"updateLine","id":"4098ec5d-39a2-4dc7-8416-9b24b2dfd83d","params":[],"body":"var me = this;\nif (me.line) {\n  var v1 = me.target.sphere.models[0].localToWorld(new THREE.Vector3(0,0,0));\n  var v2 = me.sphere.models[0].localToWorld(new THREE.Vector3(0,0,0));\n  var p = me.line.geometry.attributes.position.array;\n  p[0] = v1.x;\n  p[1] = v1.y;\n  p[2] = v1.z;\n  p[3] = v2.x;\n  p[4] = v2.y;\n  p[5] = v2.z;\n  me.line.geometry.attributes.position.needsUpdate = true;\n}\n"},{"name":"updateLines","id":"b5d6c710-c59b-4953-8802-43684cba2f93","params":[],"body":"var me = this;\nvar amsrc = me.direction == \"src\";\nif (amsrc) {\n  if (!me.targets) me.targets = [];\n  for (var i in me.targets) me.targets[i].updateLine();\n}\nelse me.updateLine();\n"}],"animations":[],"poses":[]},"db":"flow","attachmentkeynames":["html","css","js"],"desc":""},"readers":["anonymous"],"id":"plyktp178da9d0906s1b","time":1640455171330,"addr":"/0:0:0:0:0:0:0:1:54158","username":"admin"}