{"data":{"attachmentkeynames":["html","css","js"],"ctl":"kwhqqh178da8fa350z18","data":[],"db":"flow","desc":"","groups":"anonymous","name":"case","three":{"animations":[],"assets":[],"behaviors":[{"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.model = model;\nme.type = \"case\";\nme.inputbar = me.children[0];\nme.outputbar = me.children[1];\nif (!me.cmds) me.cmds = [];\nme.inputbar.api.parent = me;\nme.inputbar.api.direction = \"src\";\nme.inputbar.api.minw = 3;\nme.inputbar.api.updateWidth();\nme.outputbar.api.parent = me;\nme.outputbar.api.direction = \"dst\";\nme.outputbar.api.minw = 3;\nme.outputbar.api.updateWidth();\n\nme.target_rot = me.target_rot ? me.target_rot : 0;\nme.current_rot = me.current_rot ? me.current_rot : 0;\n\nme.setData(ME.DATA);\n\nif (!ME.DATA.casenum || ME.DATA.casenum == 1) {\n  me.data.casenum = 1;\n  me.cases = { \"1\": me };\n  me.rebuildCaseButtons(me);\n\n  // FIXME - Should only add one click handler across all cases and send event to the current one. Should also remove click handler when exiting to parent.\n  var thediv = $(\"#\"+me.model.scene.viewer.UUID);\n  thediv[0].lastDrag = 0; // FIXME - Sloppy (node sets lastDrag on both drag and drop, should use something other than proximity in time to suppress click).\n  thediv.click(function(e){\n    me.currentcase.handleClick(e, thediv);\n  });\n}\n\n","id":"2002b007-0ec4-4972-9b7a-648e9d5ea1e7","name":"animate","params":[{"name":"model","type":"object"}]},{"body":"var me = this;\n\nif (me.target_z == 0 && !e.handled && new Date().getTime() - thediv[0].lastDrag > 500) {\n  if (e.shiftKey) {\n    e.handled = true;\n    var pos = me.model.scene.viewer.to3D(e.clientX, e.clientY);\n    pos.x -= me.model.rig.pos_x;\n    pos.y -= me.model.rig.pos_y;\n    pos.z -= me.model.rig.pos_z;\n\n    var ctl = {\n        \"pos\": pos,\n        \"name\": \"untitled\",\n        \"type\": \"local\"\n    };\n    me.addOperation(ctl);\n    me.dirty();\n  }\n  else {\n    me.select(null);\n  }\n}\n//e.preventDefault();\nreturn false;\n","id":"8811a698-02d4-4400-b38c-5a87e31c167e","name":"handleClick","params":[{"name":"e","type":"object"},{"name":"thediv","type":"object"}]},{"body":"var me = this;\n\nc = me.data;\nwhile (casenum-->1) c = c.nextcase;\nreturn c;\n","id":"2f83a036-ba3b-4a37-bf60-7271b8ea3161","name":"findCaseData","params":[{"name":"casenum","type":"object"}]},{"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nif (!currentcase) currentcase = me.currentcase;\n$(ME).find('.casebuttons').remove();\nvar el = $(\"<div class='bottomcenter casebuttons' />\");\n$(ME).append(el);\nel.append('<button class=\"casebutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab casenum1\">1</button>');\nvar cases = el[0].cases = me.cases;\nme.currentcase = el[0].currentcase = currentcase;\nvar c = me.data;\nvar i = 2;\nme.lastcase = c;\nwhile (c.nextcase){\n  el.append('<button class=\"casebutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab casenum'+i+'\">'+i+'</button>');\n  me.lastcase = c = c.nextcase;\n  c.casenum = i;\n  i++;\n}\nel.append('<button class=\"casebutton mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab\">+</button>');\nvar numcases = i-1;\n$(ME).find('.casenum'+currentcase.data.casenum).addClass('mdl-button--colored');\ncomponentHandler.upgradeAllRegistered();\n\n$(ME).find('.casebutton').click(function(){\n  var b = false;\n  var which = this.innerHTML;\n  if (which == '+'){\n    which = ++numcases+\"\";\n    b = true;\n  }\n  currentcase.target_rot = Math.PI / (currentcase.data.casenum < Number(which) ? 2 : -2);\n  \n  currentcase.select(null);\n\n  if (!cases[which]){\n    var casedata = b ? {cmds:[], cons:[], input:{}, output:{}} : me.findCaseData(Number(which));\n    casedata.pos = new THREE.Vector3(20,0,0);\n    casedata.casenum = Number(which);\n    var el2 = $('<div/>');\n    $(ME).append(el2);\n    me.model.scene.viewer.add(el2[0], \"flow\", \"case\", function(model){\n      me.currentcase = currentcase = el[0].currentcase = cases[which] = model.api;\n      currentcase.parent = me;\n      currentcase.rebuildCaseButtons = me.rebuildCaseButtons;\n      me.children.push(currentcase);\n      currentcase.type = 'case';\n      currentcase.current_rot = Math.PI / -4;\n      currentcase.target_rot = 0;\n      currentcase.target_z = 0;\n      var nodes = {};\n      nodes.in = me.inputbar.api.getCode();\n      nodes.out = me.outputbar.api.getCode();\n      model.api.setNodes(nodes);\n      if (b) me.lastcase = me.lastcase.nextcase = casedata;\n      me.rebuildCaseButtons(model.api);\n    }, casedata);\n  }\n  else {\n    var oldcasenum = Number(currentcase.data.casenum);\n    $(ME).find('.casenum'+oldcasenum).removeClass('mdl-button--colored');\n    me.currentcase = currentcase = el[0].currentcase = cases[which];\n    currentcase.target_rot = 0;\n    currentcase.current_rot = Math.PI / (currentcase.data.casenum < oldcasenum ? 4 : -4);\n    $(ME).find('.casenum'+currentcase.data.casenum).addClass('mdl-button--colored');\n  }\n});\n","id":"7cd9187e-1c0f-451c-908a-46de2b8d6ae3","name":"rebuildCaseButtons","params":[{"name":"currentcase","type":"object"}]},{"body":"var me = this;\n\nvar rot = me.target_rot - me.current_rot;\nif (rot != 0){\n  if (Math.abs(rot) > 0.03) me.current_rot += me.target_rot < me.current_rot ? -0.02 : 0.02;\n  else me.current_rot = me.target_rot;\n  me.model.rig.rot_y = me.current_rot;\n  me.model.rig.pos_x = Math.sin(me.current_rot) * -20;\n  me.model.rig.pos_z = Math.cos(me.current_rot) * -20 + 20;\n  me.inputbar.api.target_rot = me.current_rot;\n  me.outputbar.api.target_rot = me.current_rot;\n  for (var i in me.cmds) me.cmds[i].target_rot = me.current_rot;\n}\nelse if (!me.target_rot){\n  me.model.rig.pos_x = 0;\n  me.model.rig.rot_y = 0;\n  var pos = Number(me.model.rig.pos_z);\n  var target = me.target_z ? me.target_z : 0;\n  if (pos != target) {\n    if (Math.abs(pos - target)>=0.5){\n      var amt = pos < target ? 0.5 : -0.5;\n      pos += amt;\n    }\n    else pos = target;\n    me.model.rig.pos_z = pos;\n  }\n  me.inputbar.api.target_z = me.target_z;\n  me.outputbar.api.target_z = me.target_z;\n  for (var i in me.cmds) me.cmds[i].target_z = me.target_z;\n  me.inputbar.api.updateLines();\n  me.outputbar.api.updateLines();\n}\n","id":"13b81f85-0e55-4fe7-ba27-fb863b23b083","name":"render","params":[{"name":"model","type":"object"}]},{"body":"var me = this;\nme.parent.dirty();","id":"ee60c7a6-9308-49b6-b6e6-e46bcd6ca2bb","name":"dirty","params":[]},{"body":"var me = this;\n\nvar cmds = [];\nvar cons = [];\nvar d = {\n  \"cons\": cons,\n  \"cmds\": cmds,\n  \"input\": me.inputbar.api.getCode(),\n  \"output\": me.outputbar.api.getCode()\n};  \n\nvar list = [];\nfor (var i=0; i<me.cmds.length; i++){\n  var o = me.cmds[i];\n  var cmd = o.getCode();\n  cmds.push(cmd);\n  list.push(o.inputbar);\n}\n\nlist.push(me.outputbar);\nfor (var i=0; i<list.length; i++){\n  var o = list[i];\n  for (var j=0; j<o.api.nodes.length; j++){\n    var dst = o.api.nodes[j];\n    var src = dst.target;\n    if (src){\n      var srccmd = src.parent.parent;\n      var srcindex = me.cmds.indexOf(srccmd);\n      var srcname = src.data.name;\n      var dstindex = i<list.length-1 ? i : -2;\n      var dstname = dst.data.name;\n      var con = {\n        \"src\": [ srcindex, srcname ],\n        \"dest\": [ dstindex, dstname ]\n      };\n      cons.push(con);\n    }\n  }\n}\nif (me.cases){\n  var od = me.data;\n  var nd = d;\n  var nextcasenum = 2;\n  while (od.nextcase) {\n    nd = nd.nextcase = me.cases[\"\"+nextcasenum] ? me.cases[\"\"+nextcasenum].getCode() : od.nextcase;\n    od = od.nextcase;\n    nextcasenum++;\n  }\n}  \nconsole.log(d);\n\nreturn d;\n","id":"692c20cb-8b90-42da-941f-378ccd423530","name":"getCode","params":[]},{"body":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nvar pos = ctl.pos ? ctl.pos : new THREE.Vector3(0,0,0);\nvar el = $('<div/>');\n$(ME).append(el);\nctl.onready = cb;\nme.model.scene.viewer.add(el[0], \"flow\", \"operation\", function(model){\n  me.children.push(model);\n  me.cmds.push(model.api);\n  model.api.parent = me;\n}, ctl, me.model.group);\n","id":"5f88356f-e1ce-4147-bb3d-3b910af166b4","name":"addOperation","params":[{"name":"ctl","type":"object"},{"name":"cb","type":"object"}]},{"body":"var me = this;\n\nvar count = 0;\nvar cb2 = function(){\n  if (++count == 2 && cb) cb();\n};\n\nif (data.in) me.inputbar.api.setNodes(data.in, cb2);\nelse cb2();\nif (data.out) me.outputbar.api.setNodes(data.out, cb2);\nelse cb2();\n","id":"4def8d6c-dd5b-452d-939d-60582c2e949b","name":"setNodes","params":[{"name":"data","type":"object"},{"name":"cb","type":"object"}]},{"body":"var me = this;\n\nme.data = data;\nvar inputnodes = data.input ? data.input : {};\nvar outputnodes = data.output ? data.output : {};\n\nfor (var i=0; i<me.data.cons.length; i++){\n  var con = me.data.cons[i];\n  if (con.src[0] == -1){\n    var name = con.src[1];\n    if (!inputnodes[name]) inputnodes[name] = {};\n  }\n  if (con.dest[0] == -2){\n    var name = con.dest[1];\n    if (!outputnodes[name]) outputnodes[name] = {};\n  }\n}\n\nvar count = 2;\nvar firsttime = true;\nvar cb2 = function(){\n  if (--count == 0) {\n    if (firsttime) {\n      firsttime = false;\n      count = me.data.cmds.length;\n      for (var i=0; i<me.data.cmds.length; i++) {\n        me.addOperation(me.data.cmds[i], cb2);\n      }\n    }\n    else {\n      for (var i=0; i<me.data.cons.length; i++){\n        var con = me.data.cons[i];\n        var src = null;\n        if (con.src[0] == -1) src = me.inputbar.api.getNodeByName(con.src[1]);;\n        var dest = null;\n        if (con.dest[0] == -2) dest = me.outputbar.api.getNodeByName(con.dest[1]);;\n        for (var j=0; j<me.cmds.length; j++){\n          if (me.cmds[j].data == me.data.cmds[con.src[0]]) src = me.cmds[j].outputbar.api.getNodeByName(con.src[1]);\n          else if (me.cmds[j].data == me.data.cmds[con.dest[0]]) dest = me.cmds[j].inputbar.api.getNodeByName(con.dest[1]);\n          if (src && dest) break;\n        }\n        var v1 = src.parent.model.group.localToWorld(new THREE.Vector3(src.model.rig.pos_x,0,0));\n        var v2 = dest.parent.model.group.localToWorld(new THREE.Vector3(dest.model.rig.pos_x,0,0));\n//          var geometry = new THREE.Geometry();\n//          geometry.vertices.push(v1, v2);\n\n\n        var points = [];\n        points.push(\n          v1,\n          v2\n        );\n        var geometry = new THREE.BufferGeometry().setFromPoints( points );\n\n        var material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n        var mesh = dest.line = new THREE.Line( geometry, material );\n        me.model.scene.add(mesh);\n        dest.target = src;\n        if (!src.targets) src.targets = [];\n        src.targets.push(dest);\n      }\n\n      if (cb) cb();\n    }\n  }\n};\nme.inputbar.api.setNodes(inputnodes, cb2);\nme.outputbar.api.setNodes(outputnodes, cb2);\n","id":"155f4de5-233b-40a3-bb99-bdc4d646f08f","name":"setData","params":[{"name":"data","type":"object"},{"name":"cb","type":"object"}]},{"body":"var me = this;\nif (me.target_z == 0) {\n  if (me.target_rot == 0) {\n    var o = me.selected;\n    if (o) {\n      me.select(null);\n      if (o.delete) o.delete();\n    }\n  }\n  else me.currentcase.deleteSelected();\n}\nelse me.selected.localdata.deleteSelected();\n\n","id":"4d80ed8e-3ddf-49a5-a6fb-434c683f2d17","name":"deleteSelected","params":[]},{"body":"var me = this;\nif (me.selected && me.selected.unselect) me.selected.unselect();\nme.selected = api;\nif (api && api.select) api.select();\nconsole.log(\"SELECTED:\");\nconsole.log(api);\n","id":"1b54257b-c7ea-44de-987e-857da254cf02","name":"select","params":[{"name":"api","type":"object"}]}],"controls":[{"db":"flow","id":"ownorw178d6b6e9d8j1f","name":"inputbar","nodes":[],"pos":{"x":"0","y":"3.5","z":"0"},"rot":{"x":0,"y":0,"z":0},"scale":{"x":1,"y":1,"z":1},"uuid":"33597592-d6f1-4d81-87bc-b3f707854739"},{"db":"flow","id":"ownorw178d6b6e9d8j1f","name":"outputbar","nodes":[],"pos":{"x":"0","y":"-3.5","z":"0"},"rot":{"x":0,"y":0,"z":0},"scale":{"x":1,"y":1,"z":1},"uuid":"74a95eb8-7163-48e9-978c-d84d18b2346b"}],"poses":[]}},"id":"kwhqqh178da8fa350z18","readers":["anonymous"],"time":1703448297379,"username":"system","writers":[]}