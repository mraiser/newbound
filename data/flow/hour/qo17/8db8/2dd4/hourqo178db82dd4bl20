{"data":{"css":"","data":[],"name":"operation","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.animate = function(model){\n  me.data = ME.DATA;\n  me.model = model;\n  me.type = \"operation\";\n  me.box = me.children[0];\n  me.text = me.children[1];\n  me.inputbar = me.children[2];\n  me.outputbar = me.children[3];\n  \n  me.inputbar.api.minw = 0.5;\n  me.inputbar.api.updateWidth();\n  me.outputbar.api.minw = 0.5;\n  me.outputbar.api.updateWidth();\n  \n  me.inputbar.api.parent = me;\n  me.inputbar.api.immobile = true;\n  me.inputbar.api.direction = \"dst\";\n  me.outputbar.api.parent = me;\n  me.outputbar.api.immobile = true;\n  me.outputbar.api.direction = \"src\";\n  \n  if (!ME.DATA.name) me.setLabel(\"UNTITLED\");\n  else me.setLabel(ME.DATA.name);\n  \n  if (!ME.DATA.type) ME.DATA.type = \"local\";\n  me.setShape(ME.DATA.type);\n  var cb = ME.DATA.onready; // FIXME - kind of a hack\n  if (ME.DATA.onready) delete ME.DATA.onready;\n  me.setNodes(ME.DATA, cb);\n};\n\nme.render = function(model){\n  me.inputbar.api.target_z = me.target_z;\n  me.outputbar.api.target_z = me.target_z;\n  me.inputbar.api.target_rot = me.target_rot;\n  me.outputbar.api.target_rot = me.target_rot;\n};\n\nme.dirty = function(){\n  me.parent.dirty();\n};\n\nme.getCode = function(){\n  var cmd = {};\n  cmd.name = me.data.name;\n  cmd.type = me.data.type;\n  cmd.in = me.inputbar.api.getCode();\n  cmd.out = me.outputbar.api.getCode();\n  cmd.width = me.box.rig.scale_x;\n  cmd.pos = new THREE.Vector3(me.model.rig.pos_x, me.model.rig.pos_y, me.model.rig.pos_z);\n  if (me.data.condition) cmd.condition = me.data.condition;\n  if (cmd.type == 'constant' || cmd.type == 'match') cmd.ctype = me.data.ctype;\n  else if (cmd.type == 'command') cmd.cmd = me.data.cmd;\n  else if (cmd.type == 'local') {\n    if (me.localdata) cmd.localdata = me.localdata.getCode();\n    else cmd.localdata = me.data.localdata;\n  }\n  return cmd;\n};\n\nme.setShape = function(type){\n  if (type == 'constant') {\n    me.inputbar.api.box.api.data.opacity = 0;\n    me.outputbar.api.box.api.data.opacity = 1;\n    me.box.api.data.opacity = 0;\n    me.data.condition = null;\n  }\n  else if (type == 'match') {\n    me.inputbar.api.box.api.data.opacity = 1;\n    me.outputbar.api.box.api.data.opacity = 0;\n    me.box.api.data.color = \"black\";\n    me.box.api.data.opacity = 0;\n    if (!me.data.condition) me.data.condition = {\n      \"value\": true,\n      \"rule\": \"next\"\n    };\n  }\n  else {\n    me.box.api.data.opacity = 1;\n    me.inputbar.api.box.api.data.opacity = 1;\n    me.outputbar.api.box.api.data.opacity = 1;\n    \n    if (type == \"primitive\") me.box.api.data.color = 0x333333;\n    else if (type == \"command\") me.box.api.data.color = 0xAAAAAA;\n    else me.box.api.data.color = 0xFFFFFF;\n  }\n  me.box.api.rebuild();\n  me.inputbar.api.box.api.rebuild();\n  me.outputbar.api.box.api.rebuild();\n  me.checkIcon();\n  me.updateWidth();\n};\n\nme.checkIcon = function(){\n  if (!me.data.condition) me.clearIcon();\n  else if (!me.icon) me.addIcon();\n  else me.icon.update(me.data.condition);\n};\n\nme.clearIcon = function(){\n  if (me.icon) me.model.scene.viewer.removeModel(me.icon);\n  me.icon = null;\n};\n\nme.addIcon = function(){\n  var el = $('<div/>'); // FIXME - never removed, same as in node\n  $(ME).append(el);\n  var ctl = {};\n  var s = 0.1;\n  ctl.scale = new THREE.Vector3(s, s, s);\n  var bounds = me.text.models[0].geometry.boundingBox;\n  var x = bounds.max.x * me.text.rig.scale_x * 0.5 + 0.5;\n  ctl.pos = new THREE.Vector3(x, 0, 0);\n  ctl.condition = me.data.condition;\n  me.model.scene.viewer.add(el[0], \"flow\", \"conditionalicon\", function(model){\n    me.icon = model.api;\n    model.api.parent = me;\n  }, ctl, me.model.group);\n};\n\nme.setNodes = function(data, cb){\n  var count = 0;\n  var cb2 = function(){\n    if (++count == 2 && cb) cb();\n  };\n  \n  if (data.in) me.inputbar.api.setNodes(data.in, cb2);\n  else cb2();\n  if (data.out) me.outputbar.api.setNodes(data.out, cb2);\n  else cb2();\n};\n\nme.setLabel = function(label){\n  ME.DATA.name = label.trim();\n  me.text.api.data.text = ME.DATA.name;\n  me.text.api.rebuild();\n  me.text.models[0].geometry.computeBoundingBox();\n  var bounds = me.text.models[0].geometry.boundingBox;\n  var w = bounds.max.x - bounds.min.x;\n  me.text.rig.pos_x = (0 - (w/2)) * me.text.rig.scale_x;\n  me.updateWidth();\n};\n\nme.delete = function(){\n  var list = me.inputbar.api.nodes.slice();\n  for (var i in list) list[i].delete();\n  list = me.outputbar.api.nodes.slice();\n  for (var i in list) list[i].delete();\n  var i = me.parent.cmds.indexOf(me);\n  if (i != -1) me.parent.cmds.splice(i, 1);\n  me.model.scene.viewer.removeModel(me.box);\n  me.model.scene.viewer.removeModel(me.text);\n  me.model.scene.viewer.removeModel(me.inputbar);\n  me.model.scene.viewer.removeModel(me.outputbar);\n  me.model.scene.viewer.removeModel(me);\n  me.dirty();\n  $(ME).remove();\n};\n\nme.updateWidth = function(){\n  var bounds = me.text.models[0].geometry.boundingBox;\n  var minx = Math.min(me.inputbar.api.minx - 0.5, me.outputbar.api.minx - 0.5, bounds.min.x * me.text.rig.scale_x + me.text.rig.pos_x - 0.125);\n  var maxx = Math.max(me.inputbar.api.maxx + 0.5, me.outputbar.api.maxx + 0.5, bounds.max.x * me.text.rig.scale_x + me.text.rig.pos_x + 0.125);\n  var w = maxx - minx;\n  me.box.rig.scale_x = w;\n  me.box.rig.pos_x = w/2 + minx;\n  if (me.icon) {\n//    var bounds = me.text.models[0].geometry.boundingBox;\n    var x = ME.DATA.type == \"match\" ? bounds.max.x * me.text.rig.scale_x * 0.5 + 0.5 : w/2 + 0.5;\n    me.icon.model.rig.pos_x = x;\n  }\n}\n\nme.select = function() {\n  $('#'+me.parent.parent.UUID).find(\".closecasebutton\").css('display', 'block');\n  $('#'+me.parent.parent.parent.UUID).find(\".closecasebutton\").css('display', 'block'); // FIXME - bit of a hack\n  me.inputbar.api.select();\n  me.outputbar.api.select();\n  if (!me.editor) {\n    me.editor = $(\"<div class='floweditor' />\");\n    $(ME).append(me.editor);\n    installControl(me.editor[0], \"flow\", \"operation_editor\", function(api){\n      api.parent = me;\n    }, ME.DATA);\n  }\n  me.editor.css(\"display\", \"block\");\n}\n\nme.unselect = function() {\n  me.inputbar.api.unselect();\n  me.outputbar.api.unselect();\n  if (me.editor){\n    me.editor.remove();\n    me.editor = null;\n  }\n}\n\nme.dblclick = function(event) {\n  if (me.data.type == 'local'){\n    me.unselect();\n    $('.casebuttons').css('display', 'none');\n\n    var casedata = me.data.localdata = me.data.localdata ? me.data.localdata : {cmds:[], cons:[], input:{}, output:{}};\n    casedata.pos = new THREE.Vector3(0,0,-20);\n    casedata.input = me.inputbar.api.getCode();\n    casedata.output = me.outputbar.api.getCode();\n    var el = $('<div/>');\n    $(ME).append(el);\n    me.model.scene.viewer.add(el[0], \"flow\", \"case\", function(model){\n      me.parent.target_z = 20;\n\n      //var nodes = {};\n      //nodes.in = me.inputbar.api.getCode();\n      //nodes.out = me.outputbar.api.getCode();\n      //model.api.setNodes(nodes);\n\n      me.localdata = model.api;\n      me.localdata.parent = me;\n      me.localdata.target_z = 0;\n      \n      $(\".closecasebutton\").css('display', 'none');\n      var el2 = '<div class=\"toprightcorner\"><button class=\"closecasebutton mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\"><i class=\"material-icons\">arrow_circle_up<\/i><\/button><\/div>';\n      $(ME).append(el2);\n      $(ME).find(\".closecasebutton\").click(function(){\n        var oldcase = me.localdata;\n        me.localdata = null;\n        oldcase.currentcase.target_z = -20;\n        \n        me.parent.target_z = 0;\n        me.parent.select(me);\n        me.data.localdata = oldcase.getCode();\n        $(ME).find(\".closecasebutton\").parent().remove();\n        el.remove();\n        $('#'+me.parent.UUID).find('.casebuttons').css('display', 'block');\n        \n        var nodes = {};\n        nodes.in = oldcase.inputbar.api.getCode();\n        nodes.out = oldcase.outputbar.api.getCode();\n        me.setNodes(nodes);\n\n        setTimeout(function(){\n          for (var i in oldcase.cases) me.removeModels(oldcase.cases[i]);\n          me.parent.rebuildCaseButtons();\n        }, 500);\n      });\n    }, casedata);\n  }\n}\n\nme.removeModels = function(oldcase){\n  me.model.scene.viewer.removeModel(oldcase);\n//  oldcase.model.group.parent.remove(oldcase.model.group);\n  oldcase.select(null);\n  for (var i in oldcase.outputbar.api.nodes) {\n    var node = oldcase.outputbar.api.nodes[i];\n    if (node.line) node.model.scene.remove(node.line);\n  }\n  for (var j in oldcase.cmds) {\n    var cmd = oldcase.cmds[j];\n    for (var i in cmd.inputbar.api.nodes) {\n      var node = cmd.inputbar.api.nodes[i];\n      if (node.line) node.model.scene.remove(node.line);\n    }\n  }\n};\n\nme.click = function(event) {\n  var p = me.parent;\n  while (p.type != 'case') p = p.parent;\n  p.select(me);\n  event.handled = true;\n  return false;\n}\n\nme.drag = function(event){\n  var pos = me.model.scene.viewer.to3D(event.clientX, event.clientY);\n  me.model.rig.pos_x = pos.x;\n  me.model.rig.pos_y = pos.y;\n  me.model.rig.pos_z = pos.z;\n  me.inputbar.api.updateLines();\n  me.outputbar.api.updateLines();\n  me.dirty();\n};\n","groups":"anonymous","ctl":"hourqo178db82dd4bl20","html":"","three":{"controls":[{"color":"0xffff00","pos":{"x":0,"y":0,"z":0},"rot":{"x":0,"y":0,"z":0},"name":"box","scale":{"x":"1.5","y":"0.5","z":"0.5"},"id":"hmzspn1682ebb4187udc6e","uuid":"b1023813-6a3a-45e3-84c4-a9e4ad05147b","db":"threejs"},{"color":"#00ff00","shape":"text","pos":{"x":"-0.6","y":"-0.2","z":"0.25"},"rot":{"x":0,"y":0,"z":0},"name":"label","scale":{"x":"0.005","y":"0.005","z":"0.005"},"id":"hmzspn1682ebb4187udc6e","text":"  ","uuid":"691b928e-0f82-422a-9059-834b23e6293d","db":"threejs"},{"nodes":[],"pos":{"x":"0","y":"0.3","z":"0"},"rot":{"x":0,"y":0,"z":0},"name":"inputbar","scale":{"x":1,"y":1,"z":1},"id":"ownorw178d6b6e9d8j1f","uuid":"855829db-d819-41b9-af17-5d6cc4940e48","db":"flow"},{"nodes":[],"pos":{"x":"0","y":"-0.3","z":"0"},"rot":{"x":0,"y":0,"z":0},"name":"outputbar","scale":{"x":1,"y":1,"z":1},"id":"ownorw178d6b6e9d8j1f","uuid":"d2c065f7-657e-4254-bfdb-dfe311baa185","db":"flow"}]},"db":"flow","desc":""},"readers":["anonymous"],"id":"hourqo178db82dd4bl20","sessionid":"jvgvwg16b7a4d277bt3","time":1622906438679,"addr":"/0:0:0:0:0:0:0:1:37730","username":"admin"}