{"data":{"attachmentkeynames":["rs"],"cmd":"listen","ctl":"service","desc":"\"Establish a connection with the specified peer and start listening for incoming data\"","import":"use std::num::ParseIntError;\nuse std::net::TcpStream;\nuse std::io::Read;\nuse std::io::Write;\nuse std::thread;\nuse std::sync::Once;\nuse state::Storage;\nuse std::sync::RwLock;\nuse std::net::TcpListener;\nuse ndata::data::*;\nuse flowlang::datastore::DataStore;\nuse flowlang::flowlang::system::unique_session_id::unique_session_id;\n//use x25519_dalek::StaticSecret;\n//use x25519_dalek::PublicKey;\nuse aes::Aes256;\nuse aes::cipher::{\n    BlockEncrypt, KeyInit,\n    generic_array::GenericArray,\n};\nuse aes::cipher::BlockDecrypt;\n//use rand::rngs::OsRng;\nuse flowlang::flowlang::system::time::time;\nuse flowlang::flowlang::file::write_properties::write_properties;\nuse crate::app::service::init::handle_command;\nuse flowlang::appserver::fire_event;\nuse crate::peer::peer::peers::user_to_peer;\nuse std::io;\nuse std::net::SocketAddr;\nuse ndata::dataarray::DataArray;\nuse ndata::databytes::DataBytes;\nuse crate::peer::service::listen_udp::UdpStream;\nuse std::net::Shutdown;\nuse std::time::Duration;\nuse std::collections::HashMap;\n//use rand::Rng;\nuse std::path::Path;\nuse std::fs;\nuse crate::security::security::init::get_user;\nuse crate::security::security::init::set_user;\nuse core::sync::atomic::AtomicBool;\nuse core::sync::atomic::Ordering;\nuse core::hint::spin_loop;\n\n\nuse flowlang::x25519::*;\nuse flowlang::rand::*;","lib":"peer","params":[{"desc":"The \"ipaddr\" parameter specifies the IP address of a peer or a host in a network connection.","name":"ipaddr","type":"String"},{"desc":"The \"port\" parameter specifies the number of a network connection endpoint used for communication between two devices.","name":"port","type":"Integer"}],"returntype":"Integer","type":"rust"},"id":"irxuhn18379cef5bcp4","readers":[],"time":1747942371334,"username":"system","writers":[]}