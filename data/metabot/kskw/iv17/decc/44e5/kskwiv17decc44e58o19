{"data":{"java":"class FileFinder {\n  public JSONArray files = new JSONArray();\n  public FileFinder(File dir)\n  {\n    findFiles(dir);\n  }\n  \n  public void findFiles(File f){\n    if (f.isDirectory())\n    {\n      String[] sa = f.list(new NoDotFilter());\n      int i = sa.length;\n      while (i-->0) findFiles(new File(f, sa[i]));\n    }\n    else files.put(f);\n  }\n  \n  public boolean remove(File f)\n  {\n    int k = files.length();\n    while (k-->0) if (files.get(k).equals(f)) break;\n    if (k == -1) \n      return false; \n    else files.remove(k);\n    return true;\n  }\n  \n  public void removeDir(File dir)\n  {\n    FileFinder ff = new FileFinder(dir);\n    int k = ff.files.length();\n    while (k-->0) remove((File)ff.files.get(k));\n    remove(dir);\n  }\n}\n\nJSONObject installed = new JSONObject();\nBotBase b = BotBase.getBot(\"botmanager\");\nBotBase m = BotBase.getBot(\"metabot\");\n\nFile f = new File(b.getRootDir().getParentFile().getParentFile(), \"data\");\nString[] sa = f.list();\nint i;\nfor (i=0;i<sa.length;i++)\n{\n  String s = sa[i];\n  File f2 = new File(f, s);\n  if (f.isDirectory() && !s.startsWith(\".\") && b.hasData(s, \"controls\"))\n  {\n    FileFinder ff = new FileFinder(f2);\n    JSONArray files = ff.files;\n    installed.put(s, files);\n    JSONArray list = b.getData(s, \"controls\").getJSONObject(\"data\").getJSONArray(\"list\");\n    ff.remove(new File(BotUtil.getSubDir(f2, \"assets\", 4, 4), \"assets\"));\n    ff.remove(new File(BotUtil.getSubDir(f2, \"controls\", 4, 4), \"controls\"));\n    ff.remove(new File(BotUtil.getSubDir(f2, \"tasklists\", 4, 4), \"tasklists\"));\n    ff.remove(new File(f2, \"version.txt\"));\n    ff.remove(new File(f2, \"meta.json\"));\n    ff.remove(new File(f2, \"_APPS.hash\"));\n    ff.removeDir(new File(f2, \"_ASSETS\"));\n    int j;\n    for (j=0;j<list.length();j++){\n      JSONObject ctl = list.getJSONObject(j);\n      String id = ctl.getString(\"id\");\n      String ctlname = ctl.getString(\"name\");\n      ctl = b.getData(s, id).getJSONObject(\"data\");\n      File f3 = BotUtil.getSubDir(f2, id, 4, 4);\n      f3 = new File(f3, id);\n      \n      if (!ff.remove(f3)) \n        break; // Not compatible with encrypted libraries\n      \n      if (ctl.has(\"timer\"))\n      {\n        JSONArray ja = ctl.getJSONArray(\"timer\");\n        int k = ja.length();\n        while (k-->0)\n        {\n          JSONObject timer = ja.getJSONObject(k);\n          id = timer.getString(\"id\");\n          f3 = BotUtil.getSubDir(f2, id, 4, 4);\n          f3 = new File(f3, id);\n          ff.remove(f3);\n        }\n      }\n      \n      if (ctl.has(\"cmd\"))\n      {\n        JSONArray ja = ctl.getJSONArray(\"cmd\");\n        int k = ja.length();\n        while (k-->0)\n        {\n          JSONObject cmd = ja.getJSONObject(k);\n          id = cmd.getString(\"id\");\n          String name = cmd.getString(\"name\");\n          cmd = b.getData(s, id).getJSONObject(\"data\");\n          f3 = BotUtil.getSubDir(f2, id, 4, 4);\n          f3 = new File(f3, id);\n          ff.remove(f3);\n          String lang = \"java\";\n          if (cmd.has(\"lang\")) lang = cmd.getString(\"lang\");\n          else if (cmd.has(\"type\")) lang = cmd.getString(\"type\");\n          if (cmd.has(lang) || cmd.has(\"cmd\"))\n          {\n            id = cmd.has(lang) ? cmd.getString(lang) : cmd.getString(\"cmd\");\n            f3 = BotUtil.getSubDir(f2, id, 4, 4);\n            f3 = new File(f3, id);\n            ff.remove(f3);\n          }\n        }\n      }\n    }\n  }\n}\nreturn installed;","import":"import org.json.*;\nimport com.newbound.robot.*;\nimport java.io.*;\nimport com.newbound.util.*;\n","returntype":"JSONObject","type":"java","params":[],"desc":""},"id":"kskwiv17decc44e58o19","sessionid":"jvgvwg16b7a4d277bt3","time":1640365053078,"addr":"/0:0:0:0:0:0:0:1:47786","username":"admin"}