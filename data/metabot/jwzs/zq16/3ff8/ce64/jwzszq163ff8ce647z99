{"data":{"css":".updatebutton, .showupdates{\n  display:none;\n}\n\n.altitle{\n  font-size:large;\n  margin-bottom:10px;\n}\n\n.libprog {\n  width:100%;\n}\n\n.mdl-snackbar__action:hover{\n  color:#83bc00;\n}\n\n.updatemsg{\n  font-style:italic;\n}\n\n.truncme {\n  position: absolute;\n  top:16px;\n  max-width: 95%;\n  white-space: nowrap;\n  overflow: hidden;         \n  text-overflow: ellipsis;\n}\n\n.uptable{\n  position:relative;\n  width:100%;\n}\n\n.libprog{\n  margin-top:20px;\n}\n\n.nothingavail{\n  display:none;\n}","data":[],"name":"updatebutton","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.ready = function(){\n  $(ME).find('.updatemsg').text('Checking for updates...');\n  componentHandler.upgradeAllRegistered();\n  \n  if (ME.DATA.peer){\n    me.peer = ME.DATA.peer;\n    me.remote_prefix = '../peerbot/remote/'+me.peer+'/';\n  }\n  else {\n    if (typeof CURRENTDEVICEPREFIX == 'undefined' || CURRENTDEVICEPREFIX == null) me.remote_prefix = '../';\n    else {\n      me.peer = CURRENTDEVICEID;\n      me.remote_prefix = CURRENTDEVICEPREFIX;\n    }\n  }\n    \n  $.getJSON(me.remote_prefix+'metabot/libraries', function(result){\n    if (!result.data){\n      $(ME).find('.updatemsg').text('Error: '+result.msg);\n      if (ME.DATA.cb) ME.DATA.cb(false, me.peer, me.updates, true, result.msg);\n    }\n    else {\n      if (result.data.data) result.data = result.data.data;\n      me.libs = [];\n      me.updates = {};\n      me.alts = {};\n      me.older = {};\n      me.same = {};\n      for (var i in result.data.list){\n        var lib = result.data.list[i];\n        if (lib.author) {\n          me.libs.push(lib);\n          me.updates[lib.id] = { \"v\":0, \"c\":lib.version };\n          me.alts[lib.id] = {};\n          me.older[lib.id] = {};\n          me.same[lib.id] = {};\n        }\n      }\n\n      if (me.remote_prefix == '../'){\n        json(me.remote_prefix+'peerbot/connections', null, function(result){\n          var peers = [];\n          me.peers = result.data;\n          for (var i in result.data){\n            var p = result.data[i];\n            if (p.connected){\n              if (p.tcp) peers.unshift(p);\n              else peers.push(p);\n            }\n          }\n          query(peers);\n        });\n      }\n      else{\n        json('../peerbot/getpeerinfo', null, function(result){\n          var uuid = result.id;\n          me.peers = {};\n          me.peers[uuid] = result;\n          json('../metabot/libraries', null, function(result){\n            parse(result, uuid);\n          });\n        });\n      }\n    }\n  }).fail(function(x,y,z) {\n    $(ME).find('.updatemsg').text('Error: '+x);\n    if (ME.DATA.cb) ME.DATA.cb(true, me.peer, me.updates, true, x);\n  });\n};\n\n$(document).click(function(event) {\n   window.lastElementClicked = event.target;\n});\n\n$(ME).find('.updatebutton').click(function(){\n  $(this).css('display', 'none');\n  $(ME).find('.showupdates').css('display', 'block');\n  me.updating = true;\n});\n\n\nfunction installNext(){\n  'use strict';\n  $(ME).find('.installupdates').css('display', 'none');\n  var y = $(ME).find('.is-checked').closest('tr').find('.selectedpeer')[0];\n  if (y) install(y);\n  else {\n    $(ME).find('.showupdates').css('display', 'none');\n    \n    var snackbarContainer = document.querySelector('#restart-snackbar');\n\n    var handler = function(event) {\n      'use strict';\n      var data = {\n        message: 'The remote device is restarting.'\n      };\n      $('.mdl-snackbar__action').css('display', 'none');\n      snackbarContainer.MaterialSnackbar.showSnackbar(data);\n      json(me.remote_prefix+'botmanager/restart', null, function(result){});\n    };\n    \n    var data = {\n      message: 'You may need to restart the remote device to see changes',\n      timeout: 5000,\n      actionHandler: handler,\n      actionText: 'restart'\n    };\n    snackbarContainer.MaterialSnackbar.showSnackbar(data);\n  }\n}\n  \nfunction install(y){\n  var lib = $(y).data('lib');\n  var peer = $(y).data('peer');\n  var td = $(y).closest('tr').find('td')[0];\n  var uuid = guid();\n  var el1 = $('<span>0%<\/span>');\n  var el2 = $('<div id=\"a_'+uuid+'\" class=\"libprog mdl-progress mdl-js-progress mdl-progress__indeterminate\"><\/div>');\n  $(y).parent().parent().append(el2[0]);\n  td.innerHTML = '<i class=\"material-icons\" style=\"vertical-align:middle;\">get_app<\/i>';\n  $(td).append(el1);\n  \n  function error(td, msg){\n    $(td).html('');\n    el2.html('<font color=\"red\">'+msg+'<\/font>').removeClass('mdl-progress__indeterminate');\n    var but = $('<button class=\"mdl-button mdl-js-button mdl-js-ripple-effect\">try again<\/button>');\n    $(td).append(but);\n    componentHandler.upgradeAllRegistered();\n    but.click(function(){\n      el2.remove();\n      install(y);\n    });\n  }\n\n  el2[0].addEventListener('mdl-componentupgraded', function() {\n    \n    var url = document.URL;\n    url = url.substring(url.indexOf(':'));\n    url = url.substring(0, url.indexOf('/',3));\n    url = 'ws'+url+(typeof me.peer == 'string' ? '/peerbot/remote/'+me.peer+'/metabot/index.html' : '/metabot/index.html');\n\n    var connection = new WebSocket(url, ['newbound']);\n\n    connection.onopen = function(){\n      console.log('Web Socket to metabot open');\n\n      json(me.remote_prefix+'metabot/installlib', 'guid=a_'+uuid+'&peer='+peer+'&lib='+lib, function(result){\n        if (result.status == 'ok'){\n          el2.removeClass('mdl-progress__indeterminate');\n          $(td).closest('tr').remove();\n          connection.close();\n          installNext();\n        }\n        else error(td, result.msg);\n      });\n    };\n\n    connection.onerror = function(error){\n      console.log('Web Socket to metabot error');\n    };\n\n    connection.onclose = function(error){\n      console.log('Web Socket to metabot close');\n    };\n\n    connection.onmessage = function(e){\n      if (SOCK) SOCK.onmessage(e);\n    };\n  });    \n\n  WSCB = function(val){\n    if (val.msg) $(y).text(val.msg);\n    if (val.percent){\n      el2.removeClass('mdl-progress__indeterminate');\n      el2[0].MaterialProgress.setProgress(val.percent);\n      el1.text(val.percent+'%');\n    }\n  };\n\n  componentHandler.upgradeAllRegistered();\n}\n\n$(ME).find('.installupdates').click(installNext);\n\n\nfunction query(peers){\n  if (!me.ucount || me.ucount < peers.length) me.ucount = peers.length;\n  if (peers.length>0) {\n    $(ME).find('.updatemsg').text('Checking for updates ('+(1 + me.ucount - peers.length)+'/'+me.ucount+')...');\n    var peer = peers.shift();\n    var p = peer.id;\n    json(me.remote_prefix+'peerbot/remote/'+p+'/metabot/libraries', null, function(result){\n      parse(result, p);\n      query(peers);\n    });\n  }\n}\n\nfunction parse(result, p){\n  if (result.data && result.data.data) result.data = result.data.data;\n  var libs = [];\n  if (result.data)\n  {\n    for (var i in result.data.list){\n      var rlib = result.data.list[i];\n      var llib = getByProperty(me.libs, 'id', rlib.id);\n      if (llib){\n        if (llib.author != rlib.author) me.alts[llib.id][p] = rlib;\n        else{\n          var lv = Number(llib.version);\n          var rv = Number(rlib.version);\n          if (isNaN(lv)) lv = 0;\n          if (isNaN(rv)) rv = 0;\n          if (lv == rv) me.same[llib.id][p] = rlib;\n          else if (lv<rv) {\n            var o = me.updates[llib.id];\n            o[p] = rlib;\n            if (o.v < rv) {\n              o.v = rv;\n              o.p = p;\n            }\n          }\n          else me.older[llib.id][p] = rlib;\n        }\n      }\n    }\n    rebuild();\n  }\n}\n\nfunction rebuild(){\n  $(ME).find('.updatemsg').text('');\n  var newhtml = \"<table class='mdl-data-table mdl-js-data-table mdl-data-table--selectable mdl-shadow--2dp uptable'><thead><tr><th class='mdl-data-table__cell--non-numeric'>Library<\/th><th>Installed<\/th><th>Available<\/th><th class='mdl-data-table__cell--non-numeric'>Peer<\/th><\/tr><\/thead><tbody>\";\n\n  me.updateable = false;\n  for (var i in me.updates){\n    var libs =  me.updates[i];\n    if (libs.v>0) {\n      \n      if (!me.updating) {\n        $(ME).find('.updatebutton').css('display', 'block');\n        me.updateable = true;\n      }\n      \n      var which = null;\n      var peers = [];\n      var dd = '';\n      var n = 0;\n      for (var j in libs){\n        if (libs[j].version == libs.v) {\n          var p = me.peers[j];\n          peers.push(p);\n          if (which == null) which = libs[j];\n          dd += '<li class=\"mdl-menu__item\" data-peer=\"'+p.id+'\">'+p.name+' ('+p.id+')<\/li>'\n          n++;\n        }\n      }\n      \n      if (n<2) dd = '';\n      else dd = '<button id=\"peerselect_'+which.id+'\" class=\"mdl-button mdl-js-button mdl-button--icon\"><i class=\"material-icons\">arrow_drop_down<\/i><\/button><ul class=\"mdl-menu mdl-menu--bottom-left mdl-js-menu mdl-js-ripple-effect\" for=\"peerselect_'+which.id+'\">'+dd+'<\/ul>';\n      \n      if (which != null){\n        var peer = peers[0];\n        newhtml += '<tr><td class=\"mdl-data-table__cell--non-numeric\">'\n          + which.id\n          + '<\/td><td>'\n          + libs.c\n          + '<\/td><td>'\n          + libs.v\n          + '<\/td><td class=\"mdl-data-table__cell--non-numeric\" width=\"50%\">'\n          + dd\n          + '<div><div class=\"truncme\"><span class=\"selectedpeer\" data-peer=\"'+peer.id+'\" data-lib=\"'+which.id+'\">'\n          + peer.name+' ('+peer.id+')'\n          + \"<\/span><\/trunc><div><\/td><\/tr>\";\n      }\n    }\n  }\n  \n  newhtml += \"<\/tbody><\/table>\";\n  $(ME).find('.libupdatetable').html(newhtml).find('.mdl-menu__item').click(function(){\n    var uuid = $(this).data('peer');\n    var peer = me.peers[uuid];\n    $(this).closest('td').find('.selectedpeer').text(peer.name+' ('+uuid+')').data('peer', uuid);\n  });\n\n  if (!me.updateable) $(ME).find('.updatemsg').text('There are no updates currently available.');\n  componentHandler.upgradeAllRegistered();\n  \n  if (ME.DATA.cb) ME.DATA.cb(me.updateable, me.peer, me.updates);\n}\n","groups":"anonymous","ctl":"jwzszq163ff8ce647z99","html":"<div class='updatemsg'><\/div>\n<button class=\"updatebutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n  Update Available\n<\/button>\n<div class='showupdates'>\n  <div class='altitle'>Available Libraries<\/div>\n  <div class='libupdatetable'><\/div>\n  <br>\n  <button class=\"installupdates mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n    Install Updates\n  <\/button>\n<\/div>\n<div id=\"restart-snackbar\" class=\"mdl-js-snackbar mdl-snackbar\">\n  <div class=\"mdl-snackbar__text\"><\/div>\n  <button class=\"mdl-snackbar__action\" type=\"button\"><\/button>\n<\/div>\n","three":{"controls":[]},"db":"metabot","desc":""},"readers":["anonymous"],"id":"jwzszq163ff8ce647z99","sessionid":"jvgvwg16b7a4d277bt3","time":1604085538639,"addr":"/0:0:0:0:0:0:0:1:33610","username":"admin"}