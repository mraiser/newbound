{"data":{"css":".installbutton{\n  display:none;\n  margin-top:20px;\n}\n\n.libid {\n  min-width:120px;\n}\n\n.shrinkme {\n  position:relative;\n  overflow:hidden;\n}","data":[],"name":"libraries","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nfunction init(list){\n    me.libs = [];\n    me.updates = { \"count\":0 };\n    me.alts = {};\n    me.older = {};\n    me.same = {};\n    for (var i in list){\n      var lib = list[i];\n      me.libs.push(lib);\n      me.updates[lib.id] = { \"v\":0, \"c\":lib.version, \"count\":0 };\n      me.alts[lib.id] = {\"count\":0};\n      me.older[lib.id] = {\"count\":0};\n      me.same[lib.id] = {\"count\":0};\n    }\n    \n    rebuild();\n\n    json('../peerbot/connections', null, function(result){\n      var peers = [];\n      me.peers = result.data;\n      for (var i in result.data){\n        var p = result.data[i];\n        if (p.connected){\n          if (p.tcp) peers.unshift(p);\n          else peers.push(p);\n        }\n      }\n      query(peers);\n    });\n}\n\nme.ready = function(){\n  componentHandler.upgradeAllRegistered();\n  \n  var dat = $(ME).data('list');\n  if (dat) init(dat);\n  else {\n    json('../metabot/libraries', null, function(result){\n      if (result.data.data) result.data = result.data.data;\n      init(result.data.list);\n    });\n  }\n};\n\nfunction query(peers){\n  if (peers.length>0) {\n    var peer = peers.shift();\n    var p = peer.id;\n    json('../peerbot/remote/'+p+'/metabot/libraries', null, function(result){\n      parse(result, p);\n      query(peers);\n    });\n  }\n}\n\nfunction parse(result, p){\n  if (result.data && result.data.data) result.data = result.data.data;\n  var libs = [];\n  if (result.data)\n  {\n    for (var i in result.data.list){\n      var rlib = result.data.list[i];\n      var llib = getByProperty(me.libs, 'id', rlib.id);\n      if (llib){\n        if (llib.author != rlib.author) { me.alts[llib.id][p] = rlib; me.alts[llib.id].count++; }\n        else{\n          var lv = Number(llib.version);\n          var rv = Number(rlib.version);\n          if (isNaN(lv)) lv = 0;\n          if (isNaN(rv)) rv = 0;\n          if (lv == rv) { me.same[llib.id][p] = rlib; me.same[llib.id].count++; }\n          else if (lv<rv) {\n            var o = me.updates[llib.id];\n            o[p] = rlib;\n            if (o.v < rv) {\n              o.v = rv;\n              o.p = p;\n              if (!o.which) o.which = rlib;\n            }\n            o.count++;\n            me.updates.count++;\n          }\n          else { me.older[llib.id][p] = rlib; me.older[llib.id].count++; }\n        }\n      }\n    }\n    rebuild();\n  }\n}\n\nfunction buildMenu(list){\n  var newhtml = ''; \n  for (var i in list){\n//    var p = me.peers[list[i].author];\n//    if (!p) p = { \"id\": list[i].author, \"name\": \"unknown\" };\n    var p = me.peers[i];\n    var v = list[i].version ? list[i].version : 0;\n    if (p) newhtml += '<li class=\"mdl-menu__item\" data-peer=\"'+p.id+'\">v'+v+' ' +p.name+' ('+p.id+')<\/li>';\n  }\n  return newhtml;\n}\n\nfunction rebuild(){\n  var newhtml = \"<table class='mdl-data-table mdl-js-data-table mdl-data-table--selectable mdl-shadow--2dp'><thead><tr><th class='mdl-data-table__cell--non-numeric'>Library<\/th><th>Version<\/th><th>Available<\/th><th class='mdl-data-table__cell--non-numeric'>Peer<\/th><\/tr><\/thead><tbody>\";\n\n  for (var i in me.libs){\n    var which =  me.libs[i];\n    var count = me.updates[which.id].count + me.older[which.id].count + me.alts[which.id].count;\n    var menu = '';\n    if (count>0){\n      menu = '<button id=\"peerselect_'+which.id+'\" class=\"mdl-button mdl-js-button mdl-button--icon\"><i class=\"material-icons\">arrow_drop_down<\/i><\/button><ul class=\"mdl-menu mdl-menu--bottom-left mdl-js-menu mdl-js-ripple-effect\" for=\"peerselect_'+which.id+'\">';\n      if (me.updates[which.id].count > 0) menu += buildMenu(me.updates[which.id]);\n      if (me.older[which.id].count > 0) {\n        menu += '<li disabled class=\"mdl-menu__item\">Older Versions<\/li>'\n        menu += buildMenu(me.older[which.id]);\n      }\n      if (me.alts[which.id].count > 0) {\n        menu += '<li disabled class=\"mdl-menu__item\">Other Authors<\/li>'\n        menu += buildMenu(me.alts[which.id]);\n      }\n      menu += '<\/ul>';\n    }\n    \n    if (me.updates[which.id].which) {\n      \n      var w = me.updates[which.id].which;\n      var v = w.version ? w.version : 0;\n      var peer = me.updates[which.id].p;\n      var p = me.peers[peer];\n      if (!p) p = { \"id\": peer, \"name\": \"unknown\" };\n      menu += '<span class=\"selectedpeer\" data-peer=\"'+peer+'\" data-lib=\"'+which.id+'\">';\n      menu += 'v'+v+' '+p.name+' ('+peer+')';\n    }\n    else menu += '<span class=\"selectedpeer\" data-lib=\"'+which.id+'\">';\n    menu += '<\/span>';\n    \n    var v = me.updates[which.id].v > 0 ? me.updates[which.id].v : '';\n    var vme = me.updates[which.id].c ? me.updates[which.id].c : 0;\n    \n    newhtml += '<tr><td class=\"mdl-data-table__cell--non-numeric\">'\n      + '<div class=\"libid\">'+which.id+\"<\/div>\"\n      + '<\/td><td>'\n      + vme\n      + '<\/td><td>'\n      + v\n      + '<\/td><td class=\"mdl-data-table__cell--non-numeric\">'\n      + menu\n      + '<\/td><\/tr>';\n\n  }\n  \n  newhtml += \"<\/tbody><\/table>\";\n  $(ME).find('.libstable').html(newhtml).find('.mdl-menu__item').click(function(){\n    var uuid = $(this).data('peer');\n    if (uuid){\n      var peer = me.peers[uuid];\n      var newhtml = $(this).text();\n      $(this).closest('td').find('.selectedpeer').text(newhtml).data('peer', uuid);\n      var cb = $(this).closest('tr').find('.mdl-checkbox')\n      if (!cb.hasClass('is-checked')) cb.click();\n    }\n  });\n  componentHandler.upgradeAllRegistered();\n  \n  $(ME).find('.mdl-checkbox').click(checkInstall);\n  checkInstall();\n  \n  var cb = $(ME).data('cb');\n  if (cb) {\n    $(ME).find('.libid').parent().click(function(){\n      cb($(this).text());\n    });\n  }\n  \n  var cb2 = $(ME).data('ready');\n  if (cb2) cb2();\n}\n\nfunction checkInstall(){\n  $($(ME).find('.mdl-checkbox').css('display', 'none')[0]).css('display', 'block');\n  \n  $(ME).find('.mdl-checkbox').each(function(x,y){\n    var b = $(y).closest('tr').find('.selectedpeer').text() == '';\n    $(y).css('display', b ? 'none' : 'block');\n  });\n  $($(ME).find('.mdl-checkbox')[0]).css('display', 'block');\n  \n  \n  setTimeout(function(){\n    var c = false;\n    $(ME).find('.mdl-checkbox').each(function(x,y){\n      if (x>0){\n        var b = $(y).closest('tr').find('.selectedpeer').text() == '';\n        var d = $(y).hasClass('is-checked');\n        if (b && d) $(y).click();\n        else if (d) c = true;\n      }\n    });\n    $(ME).find('.installbutton').css('display', c ? 'block' : 'none');\n  }, 500);\n}\n\n$(ME).find('.installbutton').click(function(){\n  $(this).css('display', 'none');\n  $(ME).find('.shrinkme').removeClass('shrinkme');\n  $(ME).find('.mdl-checkbox').each(function(x,y){\n    if (x>0){\n      if (!$(y).hasClass('is-checked')) $(y).closest('tr').addClass('shrinkme');\n    }\n  });\n  $(ME).find('.shrinkme').animate({\"opacity\":\"0\"}, 500, function(){\n    $(ME).find('.shrinkme').css('display', 'none');\n  });\n  installNext();\n});\n\n\n\n\n\n\n\n\nfunction installNext(){\n  $(ME).find('.installupdates').css('display', 'none');\n  var y = $(ME).find('.is-checked').closest('tr').find('.selectedpeer')[0];\n  if (y) install(y);\n  else {\n    $(ME).find('.shrinkme').css('display', 'table-row').css('opacity', '1');\n    json('../metabot/libraries', null, function(result){\n      if (result.data.data) result.data = result.data.data;\n      init(result.data.list);\n    });\n  }\n}\n  \nfunction install(y){\n  var lib = $(y).data('lib');\n  var peer = $(y).data('peer');\n  var td = $(y).closest('tr').find('td')[0];\n  var uuid = guid();\n  var el1 = $('<span><\/span>');\n  var el2 = $('<div id=\"a_'+uuid+'\" class=\"libprog mdl-progress mdl-js-progress mdl-progress__indeterminate\" style=\"width:'+$(y).parent().width()+'px;\"><\/div>');\n  $(y).parent().append(el2[0]);\n  td.innerHTML = '<i class=\"material-icons\" style=\"vertical-align:middle;\">get_app<\/i>';\n  $(td).append(el1);\n  \n  function error(td, msg){\n    $(td).html('');\n    el2.html('<font color=\"red\">'+msg+'<\/font>').removeClass('mdl-progress__indeterminate');\n    var but = $('<button class=\"mdl-button mdl-js-button mdl-js-ripple-effect\">try again<\/button>');\n    $(td).append(but);\n    componentHandler.upgradeAllRegistered();\n    but.click(function(){\n      el2.remove();\n      install(y);\n    });\n  }\n\n  el2[0].addEventListener('mdl-componentupgraded', function() {\n    \n    var url = document.URL;\n    url = url.substring(url.indexOf(':'));\n    url = url.substring(0, url.indexOf('/',3));\n    url = 'ws'+url+'/metabot/index.html';\n\n    var connection = new WebSocket(url, ['newbound']);\n\n    connection.onopen = function(){\n      console.log('Web Socket to metabot open');\n\n      json('../metabot/installlib', 'guid=a_'+uuid+'&peer='+peer+'&lib='+lib, function(result){\n        if (result.status == 'ok'){\n          el2.removeClass('mdl-progress__indeterminate');\n          $(td).closest('tr').removeClass('is-checked').css('display', 'none').addClass('shrinkme').find('.is-checked').removeClass('is-checked');\n          $(y).text('');\n          el1.remove();\n          el2.remove();\n          \n          connection.close();\n          installNext();\n        }\n        else error(td, result.msg);\n      });\n    };\n\n    connection.onerror = function(error){\n      console.log('Web Socket to metabot error');\n    };\n\n    connection.onclose = function(error){\n      console.log('Web Socket to metabot close');\n    };\n\n    connection.onmessage = function(e){\n      if (SOCK) SOCK.onmessage(e);\n    };\n  });    \n\n  WSCB = function(val){\n    if (val.msg) $(y).text(val.msg);\n    if (val.percent){\n      el2.removeClass('mdl-progress__indeterminate');\n      el2[0].MaterialProgress.setProgress(val.percent);\n      el1.text(val.percent+'%');\n    }\n  };\n\n  componentHandler.upgradeAllRegistered();\n}\n\n\n\n\n\n\n\n$(document).click(function(event) {\n   window.lastElementClicked = event.target;\n});\n","groups":"anonymous","ctl":"rrimzj16418cc4bfdg35b","html":"<div class='libstable'><\/div>\n<button class=\"installbutton mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\">\n  Install\n<\/button>\n<br><br>","db":"metabot","desc":""},"readers":["anonymous"],"id":"rrimzj16418cc4bfdg35b","sessionid":"jvgvwg16b7a4d277bt3","time":1574954038387,"addr":"/0:0:0:0:0:0:0:1:49158","username":"admin"}