{"data":{"css":".autoupdatelibraries{\n  margin-left:40px;\n}\n\n.hideme {\n  display:none;\n}\n\n.upbut{\n  margin:40px;\n}\n\n.listtable{\n  position:absolute;\n  top:0px;\n  left:0px;\n  height:100%;\n  width:180px;\n  overflow-y:auto;\n  overflow-x:hidden;\n  z-index:100;\n  background-color:white;\n}\n\n.listtable-inner{\n  position:relative;\n  left:-50px;\n}\n\n.libdetail{\n  position:absolute;\n  left:190px;\n  right:0px;\n  height:100%;\n  overflow:auto;\n}\n\n.floatleft{\n  position:absolute;\n  left:120px;\n}\n\n.pointy{\n  cursor:pointer;\n}\n\n.lesslibs{\n  display:none;\n}\n\n.updatebadge{\n  vertical-align:bottom;\n  cursor:pointer;\n  margin-left:20px;\n}\n\n.mdl-badge.mdl-badge--overlap:after{\n  background-color:#83bc00;\n}\n\n.libid{\n  cursor:pointer;\n}","data":[],"name":"liblist","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.ready = function(){\n  json('../metabot/libraries', null, function(result){\n      if (result.data.data) result.data = result.data.data;\n      result.data.list.sort(function(a,b) {return (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0);} ); \n      document.body.libraries = result.data.list;\n      me.build(result.data.list);\n\t  var db = getQueryParameter('db');\n\t  if (db != 'null') {\n        $('a.mdl-layout__tab').removeClass('is-active');\n        $('a[href=\"#scroll-tab-2\"]').addClass('is-active');\n        $('.mdl-layout__tab-panel').removeClass('is-active');\n        $('#scroll-tab-2').addClass('is-active');      \n      \n        var lib = getByProperty(result.data.list, 'id', db);\n        installControl($(ME).find('.libdetail')[0], 'metabot', 'libinfo', function(){}, lib);\n            \n        var loc = window.location.href;\n        var i = loc.indexOf('?');\n        loc = loc.substring(0,i);\n        window.history.pushState(db, \"MetaBot\", loc);\n      }\n      $('#publish-tab')[0].api.setLibs(result.data.list);\n  });\n  \n  \n  json('../metabot/call', 'db=metabot&name=metabot&cmd=autoupdate&args={}', function(result){\n    var el = $('#autoupdatelibraries').prop('checked', result.msg == 'true').parent()[0];\n    if (result.msg == 'true') el.MaterialSwitch.on();\n    else el.MaterialSwitch.off();\n    \n    $('#autoupdatelibraries').change(function(){\n      var args = {val:\"\"+$(this).prop(\"checked\")};\n      json('../metabot/call', 'db=metabot&name=metabot&cmd=autoupdate&args='+encodeURIComponent(JSON.stringify(args)), function(result){\n        $('#autoupdatelibraries').prop('checked', result.msg == 'true');\n        if (result.msg == 'true') el.MaterialSwitch.on();\n        else el.MaterialSwitch.off();\n      });\n    });\n  });\n};\n\n$(ME).find('.addlibrarybutton').click(function(){\n  var data = {\n    title:'New Library',\n    text:'New library name',\n    subtext:'lowercase letters, numbers, and underscores only.',\n    cancel:'cancel',\n    ok:'create',\n    validate:function(val){\n      if (val.length == 0) return false;\n      var validchars = 'abcdefghijklmnopqrstuvwxyz_0123456789';\n      var i = val.length;\n      while (i-->0) if (validchars.indexOf(val.charAt(i)) == -1) return false;\n      return true;\n    },\n    cb: function(val){\n      json('../botmanager/newdb', 'db='+encodeURIComponent(val)+'&readers='+encodeURIComponent(JSON.stringify([\"anonymous\"])), function(result){\n        json('../botmanager/write', 'id=tasklists&data=%7B%7D&db='+encodeURIComponent(val), function(result){\n          json('../metabot/call', 'db=metabot&name=metabot&cmd=libraries&args={}', function(result){\n            if (result.data.data) result.data = result.data.data;\n            result.data.list.sort(function(a,b) {return (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0);} ); \n            me.build(result.data.list);\n            var lib = getByProperty(result.data.list, 'id', val);\n            installControl($(ME).find('.page-content')[0], 'metabot', 'libinfo', function(){}, lib);\n          });\n        });\n      });\n    }\n  };\n  installControl($(ME).find('.dialogdiv')[0], 'metabot', 'promptdialog', function(){}, data);\n});\n\nme.build = function(list){\n  ME.DATA.list = list;\n\n  var t = $(ME).find('.listtable-inner');\n  t.data('list', list);\n  \n  var cb = function(db){\n    var lib = getByProperty(list, 'id', db);\n    installControl($(ME).find('.libdetail')[0], 'metabot', 'libinfo', function(){}, lib);\n    $(ME).find('.lesslibs').click();\n  }\n  t.data('cb', cb);\n  \n  cb = function(){\n    var el = $('<i class=\"floatleft pointy morelibs material-icons\">more<\/i>');\n    el.click(function(){\n      $(this).css('display', 'none');\n      $(ME).find('.addlibrarybutton').css('display', 'none');\n      $(ME).find('.lesslibs').css('display', 'block');\n      $(ME).find('.listtable').animate({\"width\":\"100%\"}, 500);\n      $(ME).find('.listtable-inner').animate({\"left\":\"40px\", \"top\":\"40px\"}, 500);\n    });\n    $(t.find('th')[1]).prepend(el);\n\n    var el2 = $('<i class=\"floatleft pointy lesslibs material-icons\">backspace<\/i>');\n    el2.click(function(){\n      $(this).css('display', 'none');\n      $(ME).find('.addlibrarybutton').css('display', 'block');\n      $(ME).find('.morelibs').css('display', 'block');\n      $(ME).find('.listtable').animate({\"width\":\"180px\"}, 500);\n      $(ME).find('.listtable-inner').animate({\"left\":\"-50px\", \"top\":\"0px\"}, 500);\n      $(ME).find('.shrinkme').css('display', 'table-row').css('opacity', '1');\n      $(ME).find('.is-checked').removeClass('is-checked');\n      $(ME).find('.is-selected').removeClass('is-selected');\n    });\n    $(t.find('th')[1]).prepend(el2);\n\n    var n = t[0].api.updates.count;\n    if (n>0){\n      var el3 = $('<div class=\"updatebadge material-icons mdl-badge mdl-badge--overlap\" data-badge=\"'+n+'\">get_app<\/div>');\n      $(t.find('th')[1]).append(el3);\n      el3.click(function(){\n        $(this).css('display', 'none');\n        el.click();\n      });\n    }\n  }\n  t.data('ready', cb);\n  \n  installControl(t[0], 'metabot', 'libraries', function(api){}, ME.DATA);\n  \n};\n  \n  ","groups":"","ctl":"kgrsuv16199aab804h1860","html":"<div class=\"mdl-layout mdl-js-layout\">\n  <main class=\"mdl-layout__content\">\n    <div class=\"page-content\">\n      <div class=\"listtable\">\n        <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect autoupdatelibraries hideme\" for=\"autoupdatelibraries\">\n          <input type=\"checkbox\" id=\"autoupdatelibraries\" class=\"mdl-switch__input\">\n          <span class=\"mdl-switch__label\">Autoupdate<\/span>\n        <\/label>\n        <div class=\"listtable-inner\" ><\/div>\n        <center>\n          <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored addlibrarybutton\">\n            <i class=\"material-icons\">add<\/i>\n          <\/button>\n        <\/center>\n        <br><br>\n      <\/div>\n      <div class=\"libdetail\"><\/div>\n    <\/div>\n  <\/main>\n<\/div>\n<div class='dialogdiv'><\/div>","db":"metabot","desc":""},"id":"kgrsuv16199aab804h1860","sessionid":"jhtpuq15d03ce0a74q0","time":1542904849204,"addr":"/0:0:0:0:0:0:0:1:63170","username":"mraiser"}