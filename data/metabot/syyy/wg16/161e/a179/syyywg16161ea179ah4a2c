{"data":{"css":".mr50{\n  margin-right:100px;\n}\n\n.javaerror{\n  margin-bottom:10px;\n}\n\n.padme{\n  padding-left:50px;\n  padding-right:50px;\n}\n\n#cancelcommandbutton{\n  position:absolute;\n  top:100px;\n  right:50px;\n}\n\n.overview{\n  width:350px;\n}\n\n.cmd-overview-textarea-input{\n  width:100%;\n  height:120px;\n  background-color: #ffffffcc;\n  color: black;\n  margin-top:10px;\n}\n\n.returntype{\n  color:white;\n  display:inline-block;\n  margin-left:50px;\n  margin-top:50px;\n}\n.commandcodediv{\n  color:white;\n  display:inline-block;\n  margin-left:50px;\n  margin-top:20px;\n}\n\n.commandcodediv{\n  display:block;\n  clear:both;\n}\n\n.returntypebar{\n  margin-top:20px;\n  background-color:#ffffffcc;\n}\n\n.rtbutton, .langbutton{\n  display:inline-block;\n  width:80px;\n  padding:5px;\n  border:thin solid black;\n  margin:-3px;\n  background-color:#7c7f86;\n  color:white;\n}\n\n.rtbselected, .rtbutton:hover, .lbselected, .langbutton:hover {\n  background-color:#505359;\n  color:white;\n}\n\n.upsome {\n  margin-top: -14px;\n  margin-bottom: 14px;\n}\n\n.importpython{\n  display:none;\n}\n\n.cmdlablepython, .cmdlablejs{\n  display:none;\n}\n\n.indent{\n  padding:10px;\n}\n\n.commandcodediv .CodeMirror-scroll {\n  height:auto;\n}\n\n.floatright{\n  float:right;\n}\n\n.mpdelete {\n  vertical-align:middle;\n  cursor:pointer;\n  color:#7c7f86;\n}\n\n.newparam {\n  display:none;\n}\n\n.newparamaddbutton{\n  font-size:10px;\n  width:auto;\n  height:auto;\n  padding:5px;\n}\n\n.noborder{\n  border:none;\n}\n\n.dontaddmethodparam{\n  padding-top:3px;\n  padding-bottom:4px;\n  position:relative;\n  top:-1px;\n}\n\n#commandcodeflow{\n  position: relative;\n  height:100%;\n  width:100%;\n}\n\n\n\n\n\n\n\n\n","data":[],"name":"editcommand","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nvar cmtheme = typeof CODEMIRRORTHEME != 'undefined' ? CODEMIRRORTHEME : 'abcdef';\n\nme.ready = function(){\n  componentHandler.upgradeAllRegistered();\n  $(ME).find('#ecmd-name').text(ME.DATA.name);\n\n  var lang = ME.DATA.cmd.lang ? ME.DATA.cmd.lang : ME.DATA.cmd.type ? ME.DATA.cmd.type : 'java';\n  var mode = lang == 'java' ? 'text/x-java' : lang == 'js' ? 'javascript' : lang;\n  var cid = ME.DATA.cmd[lang] ? ME.DATA.cmd[lang] : ME.DATA.cmd.cmd\n\n  json('../botmanager/read', 'db='+ME.DATA.db+'&id='+cid, function(result){ \n    me.cmddata = result.data;\n    var code = result.data[lang];\n    $(ME).find('.editcommandiddisplay').text(ME.DATA.cmd.id);\n    $(ME).find('.editcommand'+lang+'iddisplay').text(ME.DATA.cmd[lang]);\n    $(ME).find('#ecmd_groups').val(result.data.groups);\n    $(ME).find('#ecmd_desc').val(result.data.desc);\n    $(ME).find('#commandcode'+lang).val(result.data[lang]);\n\n    var rt = result.data.returntype ? result.data.returntype : 'JSONObject';\n    $(ME).find('.rtbutton').removeClass('rtbselected');\n    $(ME).find('#rtb'+rt.toLowerCase()).addClass('rtbselected');\n    $(ME).find('.returntypespan').text(rt);\n    $(ME).find('.methodnamespan').text(ME.DATA.name);\n    \n    $(ME).find('.langbutton').removeClass('lbselected');\n    $(ME).find('#lang_'+lang).addClass('lbselected');\n    \n    $(ME).find('.imports').css('display', lang != 'js' ? 'inline-block' : 'none');\n    $(ME).find('.importform').css('display', 'none');\n    $(ME).find('.import'+lang).css('display', 'block');\n    $(ME).find('.cmdlable').css('display', 'none');\n    $(ME).find('.cmdlable'+lang).css('display', 'inline-block');\n    \n    buildParams();\n    \n    if (result.data.import) {\n      if (lang == 'java') $(ME).find('#ecmd_imports').val(result.data.import);\n      else if (lang == 'python') $(ME).find('#ecmdpy_imports').val(result.data.import);\n    }\n    \n    var c = $(ME).find('#commandcode'+lang)[0];\n    var conf = {\n      mode : mode,\n      theme: cmtheme,\n      lineWrapping: true,\n      autofocus : false,\n      viewportMargin: Infinity,\n      onChange: function (cm) { $('#savecommandbutton').removeClass('bggray').addClass('bggreen'); }\n    };\n    if (lang != 'flow') {\n      c.cm = CodeMirror.fromTextArea(c, conf);\n    }\n    else {\n      installControl(\"#commandcodeflow\", \"flow\", \"editor\", function(api){\n        me.floweditor = api;\n        api.parent = me;\n      }, me.cmddata[lang]);\n    }\n    \n    $(ME).find('.addmethodparam').click(function(){\n      $(this).css('display', 'none');\n      $(ME).find('.newparam').css('display', 'inline-block');\n    });\n    \n    $(ME).find('.dontaddmethodparam').click(function(){\n      $(ME).find('.addmethodparam').css('display', 'inline-block');\n      $(ME).find('.newparam').css('display', 'none');\n    });\n    \n    $(ME).find('.newparamaddbutton').click(function(){\n      var p = { \n        \"name\": $(ME).find('.newparamname').val().trim(),\n        \"type\": $(ME).find('#cmd_edit_java_newparamtype').val()\n      };\n\n      if (p.name.length<1) alert(\"Please give the new parameter a valid name\");\n      else if (getByProperty(me.cmddata.params, 'name', p.name)) alert('There is already a parameter with that name.');\n      else {\n        me.cmddata.params.push(p);\n        $(ME).find('.addmethodparam').css('display', 'inline-block');\n        $(ME).find('.newparam').css('display', 'none');\n        buildParams();\n        $('#savecommandbutton').removeClass('bggray').addClass('bggreen');\n      }\n    });\n    \n    $(ME).find('#savecommandbutton').click(function(){ \n      var readers = $('#ecmd_groups').val().trim();\n      if (readers != '') readers = '&readers='+JSON.stringify(readers.split(','));\n      \n      var cmd = {\n        \"name\": ME.DATA.cmd.name,\n        \"type\": lang,\n        \"id\": ME.DATA.cmd.id\n      };\n      cmd[lang] = ME.DATA.cmd[lang];\n      console.log(\"WRITE \"+ME.DATA.db+\" / \"+ME.DATA.cmd.id+\" / \"+readers+\" / \"+JSON.stringify(cmd));\n      json('../botmanager/write', 'db='+encodeURIComponent(ME.DATA.db)+'&id='+encodeURIComponent(ME.DATA.cmd.id)+readers+'&data='+encodeURIComponent(JSON.stringify(cmd)), function(result){\n      \n      \n      \n      \n      \n      \n        var c = $('#commandcode'+lang)[0];\n        var data = lang == 'flow' ? me.floweditor.getData() : c.cm.getValue(); //$('#cmd_edit_java').val();\n        var returntype = hackFix($(ME).find('.rtbselected')[0].id.substring(3));\n        var imports = lang == 'js' || lang == 'flow' ? '' : lang == 'java' ? $('#ecmd_imports').val() : $('#ecmdpy_imports').val();\n        var desc = $('#ecmd_desc').val().trim();\n        var params = me.cmddata.params;\n        var cmddata = {};\n        var groups = $('#ecmd_groups').val().trim();\n        cmddata.type = lang;\n        cmddata[lang] = data;\n        cmddata.params = params;\n        cmddata.returntype=returntype;\n        cmddata.import = imports;\n        cmddata.desc = desc;\n        cmddata.attachmentkeynames = [ lang ];\n        if (groups != '') cmddata.groups = groups;\n\n        console.log(\"WRITE \"+ME.DATA.db+\" / \"+ME.DATA.cmd[lang]+\" / \"+readers+\" / \"+JSON.stringify(cmddata));\n        json('../botmanager/write', 'db='+encodeURIComponent(ME.DATA.db)+'&id='+encodeURIComponent(ME.DATA.cmd[lang])+readers+'&data='+encodeURIComponent(JSON.stringify(cmddata)), function(result){\n          if (result.status !='ok') alert(result.msg);\n          $('#savecommandbutton').removeClass('bggreen').addClass('bggray'); \n\n\n          console.log(\"COMPILE \"+ME.DATA.db+\" / \"+ME.DATA.cmd.id+\" / \"+JSON.stringify(ME.DATA.cmd[lang])+\" / \"+JSON.stringify(data));\n          json('../botmanager/compile', 'db='+ME.DATA.db+'&id='+encodeURIComponent(ME.DATA.cmd.id)+readers+'&cmd='+ME.DATA.cmd[lang]+'&'+lang+'='+encodeURIComponent(data)+'&returntype='+encodeURIComponent(returntype)+'&import='+encodeURIComponent(imports)+'&params='+encodeURIComponent(JSON.stringify(params)), function(result){\n            if (result.status != 'ok')  $(ME).find('.javaerror').html('<pre>'+result.msg+'<\/pre>');\n            else {\n  //            var x = data;\n  //            data = me.cmddata;\n  //            data.type = lang;\n  //            data[lang] = x;\n  //            data.returntype=returntype;\n  //            data.import=imports;\n  //            data.desc = desc;\n\n  //            document.body.api.saveControl();\n\n  //            console.log(\"WRITE \"+ME.DATA.db+\" / \"+cmd[lang]+\" / \"+readers+\" / \"+JSON.stringify(data));\n  //            json('../botmanager/write', 'db='+ME.DATA.db+'&data='+encodeURIComponent(JSON.stringify(data))+readers+'&id='+encodeURIComponent(cmd[lang]), function(result){\n  //              if (result.status != 'ok') $(ME).find('.javaerror').html(result.msg);\n  //              else {\n                  json('../metabot/buildjsapi', 'lib='+ME.DATA.db+'&id='+ME.DATA.ctl, function(result){\n                    $(ME).find('.javaerror').html('Your command has been saved.');\n                    setTimeout('$(\".javaerror\").html(\"\");', 3000);\n                  });\n  //              }\n  //            });\n            }\n          });\n        });\n      });\n    });\n    \n    $(ME).find('#cancelcommandbutton').click(function(){ \n      $('.api-main').css('display', 'block');\n      $('.api-editcommand').css('display', 'none').empty();\n    });\n    \n    $(ME).find('#deletecommandbutton').click(function(){\n      if (confirm('Are you sure you want to delete this command? This cannot be undone.')) {\n        json('../botmanager/delete', 'db='+ME.DATA.db+'&id='+encodeURIComponent(ME.DATA.cmd.id), function(result){\n          if (result.status != 'ok') {\n            alert(result.msg);\n          }\n          else {\n            var data = getByProperty(ME.DATA.data.cmd, 'id', c.uuid);\n            var i = ME.DATA.data.cmd.indexOf(data);\n            ME.DATA.data.cmd.splice(i, 1);\n            $($('.savebutton')[0]).click();\n            $('.api-main').css('display', 'block');\n            $('.api-editcommand').css('display', 'none').empty();\n            ME.DATA.ctlapi.buildCommandList();\n          }\n        });\n      }\n    });\n    \n    $(ME).find('input').change(inputchange);\n    $(ME).find('input').keyup(inputchange);\n    $(ME).find('.newparamname').unbind('change');\n    $(ME).find('.newparamname').unbind('keyup');\n    $(ME).find('textarea').change(inputchange);\n    $(ME).find('textarea').keyup(inputchange);\n    $(ME).find('.rtbutton').click(function(){ \n      $('#savecommandbutton').removeClass('bggray').addClass('bggreen'); \n      $('.rtbutton').removeClass('rtbselected');\n      $(this).addClass('rtbselected').blur();\n      inputchange({\"target\": this});\n    });\n    $(ME).find('.langbutton').click(function(){ \n      $('#savecommandbutton').removeClass('bggray').addClass('bggreen'); \n      $('.langbutton').removeClass('lbselected');\n      $(this).addClass('lbselected').blur();\n      \n      var c = $(ME).find('#commandcode'+lang)[0];\n      if (c.cm) c.cm.toTextArea();\n      \n      lang = ME.DATA.cmd.lang = this.id.substring(5);\n      conf.mode = mode = lang == 'java' ? 'text/x-java' : lang == 'js' ? 'javascript' : lang;\n      \n      $(ME).find('.imports').css('display', lang != 'js' && lang != 'flow' ? 'inline-block' : 'none');\n      $(ME).find('.importform').css('display', 'none');\n      $(ME).find('.import'+lang).css('display', 'block');\n      $(ME).find('.cmdlable').css('display', 'none');\n      $(ME).find('.cmdlable'+lang).css('display', 'inline-block');\n      \n      c = $(ME).find('#commandcode'+lang)[0];\n      if (lang != 'flow') c.cm = CodeMirror.fromTextArea(c, conf);\n      \n      if (!ME.DATA.cmd[lang]){\n        var code = lang == 'java' ? 'return null;' : lang == 'python' ? \"return 'something'\" : lang == 'js' ? \"return 'something';\" : \"{\\\"cons\\\":[], \\\"cmds\\\":[], \\\"input\\\":{}, \\\"output\\\":{}}\";\n        if (lang != 'flow'){\n          c.cm.setValue(code);\n          me.cmddata[lang] = code;\n        }\n        else {\n          installControl(\"#commandcodeflow\", \"flow\", \"editor\", function(api){\n              me.floweditor = api;\n              api.parent = me;\n          }, JSON.parse(code));\n        }\n        json('../peerbot/suggestaccesscode', null, function(result){\n          ME.DATA.cmd[lang] = result.msg;\n          $(ME).find('.editcommand'+lang+'iddisplay').text(ME.DATA.cmd[lang]);\n        });\n      }\n      else {\n        $(ME).find('.editcommand'+lang+'iddisplay').text(ME.DATA.cmd[lang]);\n        json('../botmanager/read', 'db='+encodeURIComponent(ME.DATA.db)+'&id='+encodeURIComponent(ME.DATA.cmd[lang]), function(result){\n          me.cmddata = result.data\n          if (lang != 'flow'){\n            c.cm.setValue(me.cmddata[lang]);\n          }\n          else {\n            installControl(\"#commandcodeflow\", \"flow\", \"editor\", function(api){\n              me.floweditor = api;\n              api.parent = me;\n            }, me.cmddata[lang]);\n          }\n          $(ME).find('.editcommand'+lang+'iddisplay').text(ME.DATA.cmd[lang]);\n        });\n      }\n    });\n    \n    \n  });\n};\n\nfunction inputchange(e){\n  var id = e.target.id;\n  var val = $(e.target).val();\n  if (id == 'ecmd_groups') me.cmddata.groups = val;\n  else if (id == 'ecmd_desc') me.cmddata.desc = val;\n  else if (id == 'ecmd_imports') me.cmddata.import = val;\n  else if (id.indexOf('rtb' == 0)) me.cmddata.returntype = hackFix(id.substring(3));\n           \n  $('#savecommandbutton').removeClass('bggray').addClass('bggreen');\n}\n\nvar hackfixnames1 = [ 'jsonobject', 'string', 'file', 'inputstream', 'flat' ];\nvar hackfixnames2 = [ 'JSONObject', 'String', 'File', 'InputStream', 'FLAT' ];\n\nfunction hackFix(name){\n  return hackfixnames2[hackfixnames1.indexOf(name)];\n}\n\nfunction buildParams(){\n  if (!me.cmddata.params) me.cmddata.params = [];\n  var list = me.cmddata.params;\n  var params = '';\n  var b = false;\n  for (var i in list){\n    var rdpi = list[i];\n    if (b) params += ', ';\n    params += '<i class=\"mdc-list-item__graphic material-icons mpdelete\" aria-hidden=\"true\" data-index=\"'+i+'\">delete<\/i>';\n    params += rdpi.type+' '+rdpi.name;\n  }\n  $(ME).find('.methodparams').html(params);\n  $(ME).find('.mpdelete').click(function(){\n    var i = $(this).data('index');\n    me.cmddata.params.splice(i,1);\n    buildParams();\n    $('#savecommandbutton').removeClass('bggray').addClass('bggreen');\n  });\n}\n\nme.dirty = function(){\n  $('#savecommandbutton').removeClass('bggray').addClass('bggreen');\n};\n\n\n","groups":"anonymous","html":"<button id=\"cancelcommandbutton\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect bggray\">close<\/button>\n<div class='padme'>\n  <h3 class='mr50'>Edit Command: <span id='ecmd-name'><\/span> (<span class='editcommandiddisplay'><\/span>)<\/h3>\n<\/div>\n\n\n<div class='mdl-card mdl-shadow--2dp overview'>\n  <div class=\"mdl-card__title\">\n    <h2 class=\"mdl-card__title-text\">Command Overview<\/h2>\n  <\/div>\n  <div class=\"mdl-card__supporting-text\">\n    <div class='upsome'>\n      <button class='langbutton lbselected' id='lang_java'>Java<\/button>\n      <button class='langbutton' id='lang_python'>Python<\/button>\n      <button class='langbutton' id='lang_js' style='display:none;'>Javascript<\/button>\n      <button class='langbutton' id='lang_flow' stylex='display:none;'>Flow<\/button>\n    <\/div>\n    <form action=\"#\">\n      <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n        <input class=\"mdl-textfield__input\" type=\"text\" id=\"ecmd_groups\" placeholder=\"Comma separated no spaces\">\n        <label class=\"mdl-textfield__label\" for=\"ecmd_groups\">Groups<\/label>\n      <\/div>\n    <\/form>              \n    <div class='greentext'>Description<\/div>\n    <form action=\"#\">\n      <div class=\"mdl-textfield mdl-js-textfield\">\n        <textarea class=\"mdl-textfield__input\" type=\"text\" rows= \"3\" id=\"ecmd_desc\" placeholder=\"Enter a description for this command\" ><\/textarea>\n        <label class=\"mdl-textfield__label\" for=\"ecmd_desc\">Description<\/label>\n      <\/div>\n    <\/form>              \n  <\/div>\n<\/div>\n\n<div class='mdl-card mdl-shadow--2dp overview imports'>\n  <div class=\"mdl-card__title\">\n    <h2 class=\"mdl-card__title-text\">Imports<\/h2>\n  <\/div>\n  <div class=\"mdl-card__supporting-text\">\n    <div class='greentext'>Import Statements<\/div>\n    <form action=\"#\" class=\"importform importjava\">\n      <div class=\"mdl-textfield mdl-js-textfield\">\n        <textarea class=\"mdl-textfield__input\" type=\"text\" rows= \"5\" id=\"ecmd_imports\" placeholder=\"Import classes and/or packages\" >import org.json.*;\nimport com.newbound.robot.*;\n<\/textarea>\n        <label class=\"mdl-textfield__label\" for=\"ecmd_imports\">>Import Statements<\/label>\n      <\/div>\n    <\/form>              \n    <form action=\"#\" class=\"importform importpython\">\n      <div class=\"mdl-textfield mdl-js-textfield\">\n        <textarea class=\"mdl-textfield__input\" type=\"text\" rows= \"5\" id=\"ecmdpy_imports\" placeholder=\"Import classes and/or packages\" >import sys\nimport json\n<\/textarea>\n        <label class=\"mdl-textfield__label\" for=\"ecmdpy_imports\">>Import Statements<\/label>\n      <\/div>\n    <\/form>              \n  <\/div>\n<\/div>\n\n\n<div class='returntype'>\n  <button id=\"savecommandbutton\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect bggray\">save<\/button>\n  <button id=\"deletecommandbutton\" class=\"floatright mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect bggray\">delete<\/button>\n  <br><br>\n  Return Type\n  <br><br>\n  <button class='rtbutton rtbselected' id='rtbjsonobject'>JSON<\/button>\n  <button class='rtbutton' id='rtbstring'>String<\/button>\n  <button class='rtbutton' id='rtbfile'>File<\/button>\n  <button class='rtbutton' id='rtbinputstream'>InputStream<\/button>\n  <button class='rtbutton' id='rtbflat'>FLAT<\/button>\n<\/div>\n\n<div class='commandcodediv'>\n  <div class='javaerror'><\/div>\n  <span class='cmdlable cmdlablejava'>public<\/span>\n  <span class='cmdlable cmdlablepython'>def<\/span>\n  <span class='cmdlable cmdlablejs'>function<\/span>\n  <span class='cmdlable cmdlablejava returntypespan'>JSONObject<\/span>\n  <span class='methodnamespan'>methodName<\/span>\n  (<span class='methodparams'><\/span>\n  <button class='bggray noborder addmethodparam'>+<\/button>\n  <select data-role=\"none\" id=\"cmd_edit_java_newparamtype\" class=\"bggray newparam\">\n    <option value=\"String\">String<\/option>\n    <option value=\"Integer\">int<\/option>\n    <option value=\"Double\">double<\/option>\n    <option value=\"Float\">float<\/option>\n    <option value=\"Long\">long<\/option>\n    <option value=\"Boolean\">boolean<\/option>\n    <option value=\"JSONObject\">JSONObject<\/option>\n    <option value=\"JSONArray\">JSONArray<\/option>\n    <option value=\"Data\">Data<\/option>\n    <option value=\"Bot\">Bot<\/option>\n  <\/select>\n  <input type='text' class='newparamname newparam'>\n  <div class=\"mdc-icon-toggle material-icons bggray newparam newparamaddbutton\" aria-label=\"Maximize\">done<\/div>\n  <button class='bggray noborder newparam dontaddmethodparam'>x<\/button>\n  )<span class='cmdlable cmdlablepython'>:<\/span>\n  <span class='cmdlable cmdlablejava'>\n    throws Exception {\n  <\/span>\n  <span class='cmdlable cmdlablejs'>{<\/span>\n  <span class='cmdlable cmdlableflow'>:<\/span>\n  <div class='indent'>\n    <textarea class='cmdlable cmdlablejava' id='commandcodejava'><\/textarea>\n    <textarea class='cmdlable cmdlablepython' id='commandcodepython'><\/textarea>\n    <textarea class='cmdlable cmdlablejs' id='commandcodejs'><\/textarea>\n    <div class='cmdlable cmdlableflow' id='commandcodeflow'><\/div>\n  <\/div>\n  <span class='cmdlable cmdlablejava'>}<\/span>\n  <br><br>\n  <span class='cmdlable cmdlablejava'>Java ID: <span class='editcommandjavaiddisplay'><\/span><\/span>\n  <span class='cmdlable cmdlablepython'>Python ID: <span class='editcommandpythoniddisplay'><\/span><\/span>\n  <span class='cmdlable cmdlablejs'>Javascript ID: <span class='editcommandjsiddisplay'><\/span><\/span>\n  <span class='cmdlable cmdlableflow'>Flow ID: <span class='editcommandflowiddisplay'><\/span><\/span>\n<\/div>\n","ctl":"syyywg16161ea179ah4a2c","three":{"controls":[],"assets":[],"behaviors":[],"animations":[],"poses":[]},"db":"metabot","desc":""},"readers":["anonymous"],"id":"syyywg16161ea179ah4a2c","sessionid":"jvgvwg16b7a4d277bt3","time":1640368178734,"addr":"/0:0:0:0:0:0:0:1:48148","username":"admin"}