// This file is auto-generated by the flowlang build script. Do not edit.
use flowlang::rustcmd::{RustCmd, Transform};
use flowlang::datastore::DataStore;
use ndata::NDataConfig;
use newbound_core;

pub fn initialize_all_commands(magic: (&'static str, NDataConfig)) {
    let mut globals = DataStore::globals();
    if !globals.has("RUST_COMMANDS") {
        globals.put_object("RUST_COMMANDS", ndata::dataobject::DataObject::new());
    }
    let mut cmd_map = globals.get_object("RUST_COMMANDS");

    // Initialize crate: newbound_core
    {
        let mut cmds = Vec::new();
        newbound_core::cmdinit(&mut cmds);
        for q in cmds {
            let cmd_details = RustCmd::detail(q.0.to_owned(), q.1, q.2.to_owned());
            cmd_map.put_object(&q.0, cmd_details);
        }
    }
}
